{"version":3,"sources":["pb/dashboard_pb.js","components/routes/paths.ts","theme/colors.ts","theme/fonts.ts","theme/scales.ts","theme/index.ts","atoms/grid.tsx","components/header/dfuse-logo.tsx","components/widgets/header-metric-item.tsx","utils/constants.ts","utils/retry.ts","services/data-providers/apps-list.ts","services/data-providers/metrics.ts","utils/time.ts","context/metrics.tsx","components/widgets/block-number.tsx","components/widgets/header-metrics.tsx","components/header/header.tsx","components/side-menu/side-menu.tsx","components/layout/layout.tsx","components/widgets/widget-box.tsx","components/widgets/widget-content.tsx","components/widgets/widget-title.tsx","atoms/status.tsx","atoms/typography.tsx","atoms/color-line.tsx","components/widgets/widget-app.tsx","components/drift-graph/drift-graph.tsx","services/history.ts","services/data-providers/status.ts","context/apps-list.tsx","context/status.tsx","pages/home.tsx","components/widgets/widget-logs.tsx","pages/mock.tsx","pages/graphiql.tsx","components/routes/routes.tsx","App.tsx","serviceWorker.ts","index.tsx","pb/dashboard_pb_service.js"],"names":["jspb","require","goog","global","Function","google_protobuf_timestamp_pb","exportSymbol","proto","dashboard","AppsListRequest","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","AppsListResponse","repeatedFields_","appsList","toObjectList","getAppsList","AppInfo","value","readMessage","addApps","f","length","writeRepeatedMessage","getRepeatedWrapperField","setAppsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearAppsList","AppsInfoRequest","filterAppId","getFieldWithDefault","readString","setFilterAppId","getFilterAppId","writeString","setProto3StringField","AppsInfoResponse","id","title","description","status","setId","setTitle","setDescription","readEnum","setStatus","undefined","getId","getTitle","getDescription","getStatus","writeEnum","setProto3EnumField","AppsMetricsRequest","AppMetricsResponse","metricsList","getMetricsList","Metric","addMetrics","setMetricsList","clearMetricsList","timestamp","getTimestamp","Timestamp","type","setTimestamp","readFloat","setValue","setType","writeMessage","getValue","writeFloat","getType","getWrapperField","setWrapperField","clearTimestamp","hasTimestamp","getField","setProto3FloatField","StartAppRequest","appId","setAppId","getAppId","StartAppResponse","StopAppRequest","StopAppResponse","DmeshRequest","DmeshResponse","clientsList","getClientsList","DmeshClient","addClients","setClientsList","clearClientsList","host","ready","boot","getBoot","servesResolveforks","servesReversible","hasMovingHead","hasMovingTail","shardSize","tierLevel","tailBlockNum","tailBlockId","irrBlockNum","irrBlockId","headBlockNum","headBlockId","setHost","readBool","setReady","setBoot","setServesResolveforks","setServesReversible","setHasMovingHead","setHasMovingTail","readUint64","setShardSize","readUint32","setTierLevel","setTailBlockNum","setTailBlockId","setIrrBlockNum","setIrrBlockId","setHeadBlockNum","setHeadBlockId","getHost","getReady","writeBool","getServesResolveforks","getServesReversible","getHasMovingHead","getHasMovingTail","getShardSize","writeUint64","getTierLevel","writeUint32","getTailBlockNum","getTailBlockId","getIrrBlockNum","getIrrBlockId","getHeadBlockNum","getHeadBlockId","setProto3BooleanField","clearBoot","hasBoot","setProto3IntField","AppStatus","NOTFOUND","CREATED","RUNNING","WARNING","STOPPED","MetricType","HEAD_BLOCK_TIME_DRIFT","HEAD_BLOCK_NUMBER","object","extend","exports","Paths","Links","home","compile","mock","colors","primary1","primary2","primary3","primary4","primary5","primary6","primary7","white","transparancy","ternary50","ternary100","ternary200","ternary250","ternary300","ternary400","ternary500","ternary600","ternary700","ternary800","ternary900","ternary950","ternary1000","ternary1100","ternary1200","link400","link500","link700","highlight1","highlight2","alert1000","appColors","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","grey9","grey10","getAppColor","appName","fonts","sans","mono","fontSizes","theme","breakpoints","lineHeights","space","shadows","small","large","Link","color","cursor","textDecoration","styled","emotionStyled","Grid","div","border","alignSelf","alignItems","justifySelf","justifyItems","gridGap","gridColumnGap","gridRowGap","gridRow","gridColumn","gridTemplateColumns","gridTemplateRows","gridAutoFlow","height","width","minHeight","minWidth","textAlign","borders","borderColor","borderRadius","maxWidth","maxHeight","Cell","justifyContent","opacity","display","borderBottom","fontSize","fontFamily","lineHeight","overflow","fontWeight","DfuseLogo","props","viewBox","style","flex","fill","d","MetricLabel","MetricData","WidgetMetricItem","metricLabel","metricData","METRIC_CONFIG","abicodec","headBlockNumber","headBlockDrift","archive","blockmeta","dgraphql","indexer","live","mindreader","merger","relayer","router","fluxdb","wait","ms","Promise","r","setTimeout","retryFunc","func","a","waitTime","console","log","name","keepTrying","client","DashboardClient","process","REACT_APP_DASHBOARD_GRPC_WEB_URL","request","resolve","reject","err","response","res","tryGetAppsList","Error","processDriftData","existingAppHeadBlockDrift","appMetric","maxCount","reduce","resultArray","rawDrift","newResultArray","firstValidPoint","findIndex","data","seconds","moment","unix","slice","push","format","processMetricEntry","metricObject","currentMaxBlockNumbers","currentMaxBlockNumber","newMaxBlockNumber","Math","max","Object","assign","context","createContext","MetricsProvider","useState","appMetrics","setAppMetrics","metrics","params","setMetrics","isStreaming","setIsStreaming","initialized","setInitialized","currentMetrics","currentHeadBlockNumbers","setCallbacks","onEnd","statusMessage","trailers","tryStreamMetrics","onMessage","appMetricIndex","m","newMetricEntry","grpc","Dashboard","AppsMetrics","start","send","useEffect","then","useStreamMetrics","Provider","children","useMetrics","useContext","BlockNumberWrapper","blockNumber","displayType","thousandSeparator","HeaderMetrics","managerAppIndex","metric","managerHeadBlockNumber","gutter","className","span","HeaderStyled","HeaderContentWrapper","Header","to","IconWrapper","MenuWrapper","SideMenu","defaultSelectedKeys","defaultOpenKeys","mode","Item","key","icon","faHome","faTools","href","target","rel","faSearch","MainWrapper","ContentWrapper","BaseLayout","pb","React","Component","withBaseLayout","WidgetStyled","WidgetBox","WidgetContentStyled","backgroundColor","WidgetContent","widgetPaddingX","widgetPaddingY","widgetPadding","asBorderTop","asBorderBottom","p","px","py","borderTop","Title","WidgetTitleWrapper","level","TitleStyled","WidgetTitle","widgetTitleText","widgetTitleSize","Text","StatusIconWrapper","iconBackgroundColor","iconBorderColor","iconCode","iconColor","BackgroundColor","BorderColor","appStatus","faExclamation","faCheck","faTimes","placement","mouseEnterDelay","mouseLeaveDelay","ColorLine","WidgetAppStyled","DescriptionWrapper","WidgetApp","appInfo","drift","metricConfig","driftToDisplay","duration","toFixed","min","floor","sec","hours","days","day","hour","durationToHumanBeta","justify","float","chartWrapperStyle","chartActionWrapperStyle","paddingBottom","marginRight","chartOptions","isLogarithmic","responsive","text","tooltips","callbacks","legend","position","scales","yAxes","scaleLabel","labelString","fontColor","gridLines","ticks","beginAtZero","xAxes","distribution","time","unit","stepSize","displayFormats","second","cleanData","datasets","forEach","filteredHeadBlockDrifts","filter","label","pointBackgroundColor","pointRadius","map","i","x","y","borderWidth","DriftGraph","setIsLogarithmic","chartDataset","options","size","onClick","AreaChartOutlined","history","createBrowserHistory","AppStatusNumberToStringMap","values","statusNumber","index","keys","AppsListProvider","apps","setApps","app","statusString","sort","b","localeCompare","StatusProvider","appsStatus","setAppsStatus","newAppsStatus","currentAppsStatus","tryStreamStatus","newStatus","appStatusIndex","AppsInfo","useStreamStatus","HomePage","appDrift","appHeadBlockNumber","appMetricConfig","info","toUpperCase","onNavigate","renderAppWidgets","TimelineWrapper","plainOptions","WidgetLogs","logsClass","setlogsClass","align","paddingRight","Group","defaultValue","onChange","checkedValues","toString","replace","toLowerCase","logs","tag","MockPage","GrapiQLPage","url","frameBorder","Routes","withRouter","exact","path","component","App","Boolean","window","location","hostname","match","dotenv","config","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","dashboard_pb","serviceName","serviceHost","AppsList","methodName","service","requestStream","responseStream","requestType","responseType","Dmesh","StartApp","StopApp","requestMessage","metadata","callback","arguments","unary","transport","debug","Code","OK","code","cancel","close","appsInfo","listeners","end","invoke","responseMessage","handler","details","on","appsMetrics","dmesh","startApp","stopApp"],"mappings":"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","file":"static/js/main.bddd322b.chunk.js","sourcesContent":["/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.exportSymbol('proto.dashboard.AppInfo', null, global);\ngoog.exportSymbol('proto.dashboard.AppMetricsResponse', null, global);\ngoog.exportSymbol('proto.dashboard.AppStatus', null, global);\ngoog.exportSymbol('proto.dashboard.AppsInfoRequest', null, global);\ngoog.exportSymbol('proto.dashboard.AppsInfoResponse', null, global);\ngoog.exportSymbol('proto.dashboard.AppsListRequest', null, global);\ngoog.exportSymbol('proto.dashboard.AppsListResponse', null, global);\ngoog.exportSymbol('proto.dashboard.AppsMetricsRequest', null, global);\ngoog.exportSymbol('proto.dashboard.DmeshClient', null, global);\ngoog.exportSymbol('proto.dashboard.DmeshRequest', null, global);\ngoog.exportSymbol('proto.dashboard.DmeshResponse', null, global);\ngoog.exportSymbol('proto.dashboard.Metric', null, global);\ngoog.exportSymbol('proto.dashboard.MetricType', null, global);\ngoog.exportSymbol('proto.dashboard.StartAppRequest', null, global);\ngoog.exportSymbol('proto.dashboard.StartAppResponse', null, global);\ngoog.exportSymbol('proto.dashboard.StopAppRequest', null, global);\ngoog.exportSymbol('proto.dashboard.StopAppResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppsListRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.AppsListRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppsListRequest.displayName = 'proto.dashboard.AppsListRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppsListRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppsListRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppsListRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsListRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppsListRequest}\n */\nproto.dashboard.AppsListRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppsListRequest;\n  return proto.dashboard.AppsListRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppsListRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppsListRequest}\n */\nproto.dashboard.AppsListRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppsListRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppsListRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppsListRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsListRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppsListResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.dashboard.AppsListResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.dashboard.AppsListResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppsListResponse.displayName = 'proto.dashboard.AppsListResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.dashboard.AppsListResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppsListResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppsListResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppsListResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsListResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    appsList: jspb.Message.toObjectList(msg.getAppsList(),\n    proto.dashboard.AppInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppsListResponse}\n */\nproto.dashboard.AppsListResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppsListResponse;\n  return proto.dashboard.AppsListResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppsListResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppsListResponse}\n */\nproto.dashboard.AppsListResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.dashboard.AppInfo;\n      reader.readMessage(value,proto.dashboard.AppInfo.deserializeBinaryFromReader);\n      msg.addApps(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppsListResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppsListResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppsListResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsListResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAppsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.dashboard.AppInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated AppInfo Apps = 1;\n * @return {!Array.<!proto.dashboard.AppInfo>}\n */\nproto.dashboard.AppsListResponse.prototype.getAppsList = function() {\n  return /** @type{!Array.<!proto.dashboard.AppInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.dashboard.AppInfo, 1));\n};\n\n\n/** @param {!Array.<!proto.dashboard.AppInfo>} value */\nproto.dashboard.AppsListResponse.prototype.setAppsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.dashboard.AppInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.dashboard.AppInfo}\n */\nproto.dashboard.AppsListResponse.prototype.addApps = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dashboard.AppInfo, opt_index);\n};\n\n\nproto.dashboard.AppsListResponse.prototype.clearAppsList = function() {\n  this.setAppsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppsInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.AppsInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppsInfoRequest.displayName = 'proto.dashboard.AppsInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppsInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppsInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppsInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    filterAppId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppsInfoRequest}\n */\nproto.dashboard.AppsInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppsInfoRequest;\n  return proto.dashboard.AppsInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppsInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppsInfoRequest}\n */\nproto.dashboard.AppsInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFilterAppId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppsInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppsInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppsInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFilterAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string filter_app_id = 1;\n * @return {string}\n */\nproto.dashboard.AppsInfoRequest.prototype.getFilterAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppsInfoRequest.prototype.setFilterAppId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppsInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.dashboard.AppsInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.dashboard.AppsInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppsInfoResponse.displayName = 'proto.dashboard.AppsInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.dashboard.AppsInfoResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppsInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppsInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppsInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    appsList: jspb.Message.toObjectList(msg.getAppsList(),\n    proto.dashboard.AppInfo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppsInfoResponse}\n */\nproto.dashboard.AppsInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppsInfoResponse;\n  return proto.dashboard.AppsInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppsInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppsInfoResponse}\n */\nproto.dashboard.AppsInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.dashboard.AppInfo;\n      reader.readMessage(value,proto.dashboard.AppInfo.deserializeBinaryFromReader);\n      msg.addApps(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppsInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppsInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppsInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAppsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.dashboard.AppInfo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated AppInfo Apps = 1;\n * @return {!Array.<!proto.dashboard.AppInfo>}\n */\nproto.dashboard.AppsInfoResponse.prototype.getAppsList = function() {\n  return /** @type{!Array.<!proto.dashboard.AppInfo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.dashboard.AppInfo, 1));\n};\n\n\n/** @param {!Array.<!proto.dashboard.AppInfo>} value */\nproto.dashboard.AppsInfoResponse.prototype.setAppsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.dashboard.AppInfo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.dashboard.AppInfo}\n */\nproto.dashboard.AppsInfoResponse.prototype.addApps = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dashboard.AppInfo, opt_index);\n};\n\n\nproto.dashboard.AppsInfoResponse.prototype.clearAppsList = function() {\n  this.setAppsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.AppInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppInfo.displayName = 'proto.dashboard.AppInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    title: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppInfo}\n */\nproto.dashboard.AppInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppInfo;\n  return proto.dashboard.AppInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppInfo}\n */\nproto.dashboard.AppInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.dashboard.AppStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.dashboard.AppInfo.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppInfo.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string title = 2;\n * @return {string}\n */\nproto.dashboard.AppInfo.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppInfo.prototype.setTitle = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.dashboard.AppInfo.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppInfo.prototype.setDescription = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional AppStatus status = 4;\n * @return {!proto.dashboard.AppStatus}\n */\nproto.dashboard.AppInfo.prototype.getStatus = function() {\n  return /** @type {!proto.dashboard.AppStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {!proto.dashboard.AppStatus} value */\nproto.dashboard.AppInfo.prototype.setStatus = function(value) {\n  jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppsMetricsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.AppsMetricsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppsMetricsRequest.displayName = 'proto.dashboard.AppsMetricsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppsMetricsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppsMetricsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppsMetricsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsMetricsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    filterAppId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppsMetricsRequest}\n */\nproto.dashboard.AppsMetricsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppsMetricsRequest;\n  return proto.dashboard.AppsMetricsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppsMetricsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppsMetricsRequest}\n */\nproto.dashboard.AppsMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFilterAppId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppsMetricsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppsMetricsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppsMetricsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppsMetricsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFilterAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string filter_app_id = 1;\n * @return {string}\n */\nproto.dashboard.AppsMetricsRequest.prototype.getFilterAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppsMetricsRequest.prototype.setFilterAppId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.AppMetricsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.dashboard.AppMetricsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.dashboard.AppMetricsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.AppMetricsResponse.displayName = 'proto.dashboard.AppMetricsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.dashboard.AppMetricsResponse.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.AppMetricsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.AppMetricsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.AppMetricsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppMetricsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    metricsList: jspb.Message.toObjectList(msg.getMetricsList(),\n    proto.dashboard.Metric.toObject, includeInstance),\n    title: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.AppMetricsResponse}\n */\nproto.dashboard.AppMetricsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.AppMetricsResponse;\n  return proto.dashboard.AppMetricsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.AppMetricsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.AppMetricsResponse}\n */\nproto.dashboard.AppMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = new proto.dashboard.Metric;\n      reader.readMessage(value,proto.dashboard.Metric.deserializeBinaryFromReader);\n      msg.addMetrics(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTitle(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.AppMetricsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.AppMetricsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.AppMetricsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.AppMetricsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMetricsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.dashboard.Metric.serializeBinaryToWriter\n    );\n  }\n  f = message.getTitle();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.dashboard.AppMetricsResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppMetricsResponse.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Metric metrics = 2;\n * @return {!Array.<!proto.dashboard.Metric>}\n */\nproto.dashboard.AppMetricsResponse.prototype.getMetricsList = function() {\n  return /** @type{!Array.<!proto.dashboard.Metric>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.dashboard.Metric, 2));\n};\n\n\n/** @param {!Array.<!proto.dashboard.Metric>} value */\nproto.dashboard.AppMetricsResponse.prototype.setMetricsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.dashboard.Metric=} opt_value\n * @param {number=} opt_index\n * @return {!proto.dashboard.Metric}\n */\nproto.dashboard.AppMetricsResponse.prototype.addMetrics = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dashboard.Metric, opt_index);\n};\n\n\nproto.dashboard.AppMetricsResponse.prototype.clearMetricsList = function() {\n  this.setMetricsList([]);\n};\n\n\n/**\n * optional string title = 3;\n * @return {string}\n */\nproto.dashboard.AppMetricsResponse.prototype.getTitle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.AppMetricsResponse.prototype.setTitle = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.Metric = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.Metric, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.Metric.displayName = 'proto.dashboard.Metric';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.Metric.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.Metric.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.Metric} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.Metric.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    value: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    type: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.Metric}\n */\nproto.dashboard.Metric.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.Metric;\n  return proto.dashboard.Metric.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.Metric} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.Metric}\n */\nproto.dashboard.Metric.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readFloat());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {!proto.dashboard.MetricType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.Metric.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.Metric.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.Metric} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.Metric.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getValue();\n  if (f !== 0.0) {\n    writer.writeFloat(\n      2,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional google.protobuf.Timestamp timestamp = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.dashboard.Metric.prototype.getTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.dashboard.Metric.prototype.setTimestamp = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.dashboard.Metric.prototype.clearTimestamp = function() {\n  this.setTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.dashboard.Metric.prototype.hasTimestamp = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional float value = 2;\n * @return {number}\n */\nproto.dashboard.Metric.prototype.getValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.Metric.prototype.setValue = function(value) {\n  jspb.Message.setProto3FloatField(this, 2, value);\n};\n\n\n/**\n * optional MetricType type = 3;\n * @return {!proto.dashboard.MetricType}\n */\nproto.dashboard.Metric.prototype.getType = function() {\n  return /** @type {!proto.dashboard.MetricType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {!proto.dashboard.MetricType} value */\nproto.dashboard.Metric.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.StartAppRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.StartAppRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.StartAppRequest.displayName = 'proto.dashboard.StartAppRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.StartAppRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.StartAppRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.StartAppRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StartAppRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    appId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.StartAppRequest}\n */\nproto.dashboard.StartAppRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.StartAppRequest;\n  return proto.dashboard.StartAppRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.StartAppRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.StartAppRequest}\n */\nproto.dashboard.StartAppRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAppId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.StartAppRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.StartAppRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.StartAppRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StartAppRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string app_id = 1;\n * @return {string}\n */\nproto.dashboard.StartAppRequest.prototype.getAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.StartAppRequest.prototype.setAppId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.StartAppResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.StartAppResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.StartAppResponse.displayName = 'proto.dashboard.StartAppResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.StartAppResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.StartAppResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.StartAppResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StartAppResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.StartAppResponse}\n */\nproto.dashboard.StartAppResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.StartAppResponse;\n  return proto.dashboard.StartAppResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.StartAppResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.StartAppResponse}\n */\nproto.dashboard.StartAppResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.StartAppResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.StartAppResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.StartAppResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StartAppResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.StopAppRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.StopAppRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.StopAppRequest.displayName = 'proto.dashboard.StopAppRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.StopAppRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.StopAppRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.StopAppRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StopAppRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    appId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.StopAppRequest}\n */\nproto.dashboard.StopAppRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.StopAppRequest;\n  return proto.dashboard.StopAppRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.StopAppRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.StopAppRequest}\n */\nproto.dashboard.StopAppRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAppId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.StopAppRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.StopAppRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.StopAppRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StopAppRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAppId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string app_id = 1;\n * @return {string}\n */\nproto.dashboard.StopAppRequest.prototype.getAppId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.StopAppRequest.prototype.setAppId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.StopAppResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.StopAppResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.StopAppResponse.displayName = 'proto.dashboard.StopAppResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.StopAppResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.StopAppResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.StopAppResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StopAppResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.StopAppResponse}\n */\nproto.dashboard.StopAppResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.StopAppResponse;\n  return proto.dashboard.StopAppResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.StopAppResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.StopAppResponse}\n */\nproto.dashboard.StopAppResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.StopAppResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.StopAppResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.StopAppResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.StopAppResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.DmeshRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.DmeshRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.DmeshRequest.displayName = 'proto.dashboard.DmeshRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.DmeshRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.DmeshRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.DmeshRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.DmeshRequest}\n */\nproto.dashboard.DmeshRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.DmeshRequest;\n  return proto.dashboard.DmeshRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.DmeshRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.DmeshRequest}\n */\nproto.dashboard.DmeshRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.DmeshRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.DmeshRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.DmeshRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.DmeshResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.dashboard.DmeshResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.dashboard.DmeshResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.DmeshResponse.displayName = 'proto.dashboard.DmeshResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.dashboard.DmeshResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.DmeshResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.DmeshResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.DmeshResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientsList: jspb.Message.toObjectList(msg.getClientsList(),\n    proto.dashboard.DmeshClient.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.DmeshResponse}\n */\nproto.dashboard.DmeshResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.DmeshResponse;\n  return proto.dashboard.DmeshResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.DmeshResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.DmeshResponse}\n */\nproto.dashboard.DmeshResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.dashboard.DmeshClient;\n      reader.readMessage(value,proto.dashboard.DmeshClient.deserializeBinaryFromReader);\n      msg.addClients(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.DmeshResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.DmeshResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.DmeshResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.dashboard.DmeshClient.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated DmeshClient clients = 1;\n * @return {!Array.<!proto.dashboard.DmeshClient>}\n */\nproto.dashboard.DmeshResponse.prototype.getClientsList = function() {\n  return /** @type{!Array.<!proto.dashboard.DmeshClient>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.dashboard.DmeshClient, 1));\n};\n\n\n/** @param {!Array.<!proto.dashboard.DmeshClient>} value */\nproto.dashboard.DmeshResponse.prototype.setClientsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.dashboard.DmeshClient=} opt_value\n * @param {number=} opt_index\n * @return {!proto.dashboard.DmeshClient}\n */\nproto.dashboard.DmeshResponse.prototype.addClients = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dashboard.DmeshClient, opt_index);\n};\n\n\nproto.dashboard.DmeshResponse.prototype.clearClientsList = function() {\n  this.setClientsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.dashboard.DmeshClient = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.dashboard.DmeshClient, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.dashboard.DmeshClient.displayName = 'proto.dashboard.DmeshClient';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.dashboard.DmeshClient.prototype.toObject = function(opt_includeInstance) {\n  return proto.dashboard.DmeshClient.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.dashboard.DmeshClient} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshClient.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    host: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    ready: jspb.Message.getFieldWithDefault(msg, 2, false),\n    boot: (f = msg.getBoot()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n    servesResolveforks: jspb.Message.getFieldWithDefault(msg, 4, false),\n    servesReversible: jspb.Message.getFieldWithDefault(msg, 5, false),\n    hasMovingHead: jspb.Message.getFieldWithDefault(msg, 6, false),\n    hasMovingTail: jspb.Message.getFieldWithDefault(msg, 7, false),\n    shardSize: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    tierLevel: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    tailBlockNum: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    tailBlockId: jspb.Message.getFieldWithDefault(msg, 11, \"\"),\n    irrBlockNum: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    irrBlockId: jspb.Message.getFieldWithDefault(msg, 13, \"\"),\n    headBlockNum: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    headBlockId: jspb.Message.getFieldWithDefault(msg, 15, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.dashboard.DmeshClient}\n */\nproto.dashboard.DmeshClient.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.dashboard.DmeshClient;\n  return proto.dashboard.DmeshClient.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.dashboard.DmeshClient} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.dashboard.DmeshClient}\n */\nproto.dashboard.DmeshClient.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReady(value);\n      break;\n    case 3:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setBoot(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setServesResolveforks(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setServesReversible(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasMovingHead(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasMovingTail(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setShardSize(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTierLevel(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTailBlockNum(value);\n      break;\n    case 11:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTailBlockId(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIrrBlockNum(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIrrBlockId(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHeadBlockNum(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHeadBlockId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.dashboard.DmeshClient.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.dashboard.DmeshClient.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.dashboard.DmeshClient} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.dashboard.DmeshClient.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getReady();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getBoot();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n  f = message.getServesResolveforks();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getServesReversible();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getHasMovingHead();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getHasMovingTail();\n  if (f) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = message.getShardSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getTierLevel();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = message.getTailBlockNum();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getTailBlockId();\n  if (f.length > 0) {\n    writer.writeString(\n      11,\n      f\n    );\n  }\n  f = message.getIrrBlockNum();\n  if (f !== 0) {\n    writer.writeUint64(\n      12,\n      f\n    );\n  }\n  f = message.getIrrBlockId();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = message.getHeadBlockNum();\n  if (f !== 0) {\n    writer.writeUint64(\n      14,\n      f\n    );\n  }\n  f = message.getHeadBlockId();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string host = 1;\n * @return {string}\n */\nproto.dashboard.DmeshClient.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.DmeshClient.prototype.setHost = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool ready = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.dashboard.DmeshClient.prototype.getReady = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.dashboard.DmeshClient.prototype.setReady = function(value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp boot = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.dashboard.DmeshClient.prototype.getBoot = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));\n};\n\n\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\nproto.dashboard.DmeshClient.prototype.setBoot = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.dashboard.DmeshClient.prototype.clearBoot = function() {\n  this.setBoot(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.dashboard.DmeshClient.prototype.hasBoot = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool serves_resolveForks = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.dashboard.DmeshClient.prototype.getServesResolveforks = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.dashboard.DmeshClient.prototype.setServesResolveforks = function(value) {\n  jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bool serves_reversible = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.dashboard.DmeshClient.prototype.getServesReversible = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.dashboard.DmeshClient.prototype.setServesReversible = function(value) {\n  jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n/**\n * optional bool has_moving_head = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.dashboard.DmeshClient.prototype.getHasMovingHead = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.dashboard.DmeshClient.prototype.setHasMovingHead = function(value) {\n  jspb.Message.setProto3BooleanField(this, 6, value);\n};\n\n\n/**\n * optional bool has_moving_tail = 7;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.dashboard.DmeshClient.prototype.getHasMovingTail = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));\n};\n\n\n/** @param {boolean} value */\nproto.dashboard.DmeshClient.prototype.setHasMovingTail = function(value) {\n  jspb.Message.setProto3BooleanField(this, 7, value);\n};\n\n\n/**\n * optional uint64 shard_size = 8;\n * @return {number}\n */\nproto.dashboard.DmeshClient.prototype.getShardSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.DmeshClient.prototype.setShardSize = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional uint32 tier_level = 9;\n * @return {number}\n */\nproto.dashboard.DmeshClient.prototype.getTierLevel = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.DmeshClient.prototype.setTierLevel = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional uint64 tail_block_num = 10;\n * @return {number}\n */\nproto.dashboard.DmeshClient.prototype.getTailBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.DmeshClient.prototype.setTailBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional string tail_block_id = 11;\n * @return {string}\n */\nproto.dashboard.DmeshClient.prototype.getTailBlockId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.DmeshClient.prototype.setTailBlockId = function(value) {\n  jspb.Message.setProto3StringField(this, 11, value);\n};\n\n\n/**\n * optional uint64 irr_block_num = 12;\n * @return {number}\n */\nproto.dashboard.DmeshClient.prototype.getIrrBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.DmeshClient.prototype.setIrrBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 12, value);\n};\n\n\n/**\n * optional string irr_block_id = 13;\n * @return {string}\n */\nproto.dashboard.DmeshClient.prototype.getIrrBlockId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.DmeshClient.prototype.setIrrBlockId = function(value) {\n  jspb.Message.setProto3StringField(this, 13, value);\n};\n\n\n/**\n * optional uint64 head_block_num = 14;\n * @return {number}\n */\nproto.dashboard.DmeshClient.prototype.getHeadBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.dashboard.DmeshClient.prototype.setHeadBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * optional string head_block_id = 15;\n * @return {string}\n */\nproto.dashboard.DmeshClient.prototype.getHeadBlockId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/** @param {string} value */\nproto.dashboard.DmeshClient.prototype.setHeadBlockId = function(value) {\n  jspb.Message.setProto3StringField(this, 15, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.dashboard.AppStatus = {\n  NOTFOUND: 0,\n  CREATED: 1,\n  RUNNING: 2,\n  WARNING: 3,\n  STOPPED: 4\n};\n\n/**\n * @enum {number}\n */\nproto.dashboard.MetricType = {\n  HEAD_BLOCK_TIME_DRIFT: 0,\n  HEAD_BLOCK_NUMBER: 1\n};\n\ngoog.object.extend(exports, proto.dashboard);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compile } from 'path-to-regexp';\n\nexport const Paths = {\n  home: '/',\n  graphiql: '/grapher',\n  mock: '/mock'\n};\n\nexport const Links = {\n  home: compile(Paths.home),\n  mock: compile(Paths.mock)\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Name and general concept taken from Material UI Color System.\n *\n * @see https://material.io/design/color/the-color-system.html\n */\n\ninterface AppColor {\n  [appName: string]: string;\n}\n\nconst appColors: AppColor = {\n  'abicodec': '#ffb230',\n  'archiver': '#ff7165',\n  'blockmeta': '#cc2644',\n  'dashboard': '#600000',\n  'dgraphql': '#8177e0',\n  'indexer': '#c783ec',\n  'kvdb-loader': '#219ce4',\n  'live': '#76ddf0',\n  'manager': '#00c0a2',\n  'merger': '#a2e349',\n  'mindreader': '#01f349',\n  'relayer': '#657a90',\n  'router': '#333333',\n  'default': '#000000',\n};\n\n\nexport const colors = {\n  primary1: '#fff0f3',\n  primary2: '#ffc6ce',\n  primary3: '#ff9baa',\n  primary4: '#ff7185',\n  primary5: '#ff4660',\n  primary6: '#e63652',\n  primary7: '#cc2644',\n\n  white: '#fff',\n  transparancy: 'rgba(255,255,255,0)',\n\n  ternary50: '#fafbfc',\n  ternary100: '#f6f8f9',\n  ternary200: '#f0f3f5',\n  ternary250: '#e4eaef',\n  ternary300: '#d8e1e9',\n  ternary400: '#bbc7d3',\n  ternary500: '#9fadbc',\n  ternary600: '#8294a6',\n  ternary700: '#657a90',\n  ternary800: '#49617a',\n  ternary900: '#2c4863',\n  ternary950: '#203d5a',\n  ternary1000: '#0f2e4d',\n  ternary1100: '#0c243b',\n  ternary1200: '#081929',\n\n  link400: '#707bdb',\n  link500: '#6673E5',\n  link700: '#5a5ab4',\n\n  highlight1: '#61d8c8',\n  highlight2: '#34cfbd',\n\n  alert1000: '#fbab0b',\n\n  appColors: appColors,\n\n  grey1: '#f8f8fa',\n  grey2: '#dcdde2',\n  grey3: '#c9cacf',\n  grey4: '#b2b2b9',\n  grey5: '#9a9ba3',\n  grey6: '#7a7c84',\n  grey7: '#5a5d65',\n  grey8: '#3a3e47',\n  grey9: '#1a1f28',\n  grey10: '#000'\n};\n\nexport type ColorTheme = typeof colors;\nexport const getAppColor = function(appName: any): string {\n  return (colors.appColors[appName] ? colors.appColors[appName] : colors.appColors['default'])\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const fonts = {\n  sans: \"system-ui, sans-serif\",\n  mono: \"Menlo, monospace\",\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const breakpoints = [\"769px\", \"1025px\", \"1300px\", \"1920px\"];\nexport const fontSizes = [11, 14, 16, 21, 24, 28, 48, 64];\nexport const lineHeights = [\n  \"17px\",\n  \"19px\",\n  \"22px\",\n  \"27px\",\n  \"30px\",\n  \"40px\",\n  \"50px\",\n];\nexport const space = [0, 4, 8, 16, 25, 30, 50, 128, 256, 512];\nexport const shadows = {\n  small: \"0 0 4px rgba(0, 0, 0, .125)\",\n  large: \"0 0 24px rgba(0, 0, 0, .125)\",\n};\n\nexport const BREAKPOINTS = {\n  small: 768,\n  medium: 1280,\n  large: 1440,\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport emotionStyled, { CreateStyled } from \"@emotion/styled\";\nimport { colors } from \"./colors\";\nimport { fonts } from \"./fonts\";\nimport { breakpoints, fontSizes, lineHeights, shadows, space } from \"./scales\";\n\nexport const theme = {\n  breakpoints,\n  fontSizes,\n  lineHeights,\n  space,\n  colors,\n  fonts,\n  shadows,\n\n  Link: {\n    color: colors.primary5,\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n};\n\nexport type ThemeInterface = typeof theme;\n\nexport const styled = emotionStyled as CreateStyled<ThemeInterface>;","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport {\n  alignItems,\n  AlignItemsProps,\n  alignSelf,\n  border,\n  borderBottom,\n  borderColor,\n  borderRadius,\n  borders,\n  BordersProps,\n  color,\n  ColorProps,\n  display,\n  DisplayProps,\n  fontFamily,\n  fontSize,\n  FontSizeProps,\n  fontWeight,\n  FontWeightProps,\n  gridAutoFlow,\n  gridColumn,\n  gridColumnGap,\n  GridColumnProps,\n  gridGap,\n  gridRow,\n  gridRowGap,\n  GridRowProps,\n  gridTemplateColumns,\n  gridTemplateRows,\n  height,\n  justifyContent,\n  JustifyContentProps,\n  justifyItems,\n  JustifyItemsProps,\n  justifySelf,\n  JustifySelfProps,\n  lineHeight,\n  LineHeightProps,\n  maxHeight,\n  maxWidth,\n  minHeight,\n  minWidth,\n  opacity,\n  OpacityProps,\n  overflow,\n  OverflowProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n  width\n} from 'styled-system';\nimport {\n  ChildPositioningProps,\n  ColoringProps,\n  GridLayoutProps,\n  SelfPositioningProps,\n  SizingProps\n} from '../theme/system';\nimport { theme } from '../theme';\n\nexport interface GridProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    BordersProps,\n    ColoringProps,\n    GridLayoutProps,\n    JustifyContentProps,\n    JustifyItemsProps,\n    JustifySelfProps,\n    SizingProps,\n    SpaceProps,\n    ChildPositioningProps,\n    SelfPositioningProps,\n    BordersProps {\n  color?: string;\n}\n\nexport const Grid: React.FC<GridProps> = styled.div`\n    display: grid;\n    position: relative;\n    ${border}\n    ${alignSelf}\n    ${alignItems}\n    ${justifySelf}\n    ${justifyItems}\n    ${gridGap}\n    ${gridColumnGap}\n    ${gridRowGap}\n    ${gridRow}\n    ${gridColumn}\n    ${gridTemplateColumns}\n    ${gridTemplateRows}\n    ${gridAutoFlow}\n    ${height}\n    ${width}\n    ${minHeight}\n    ${minWidth}\n    ${space}\n    ${color}\n    ${textAlign}\n    ${borders}\n    ${borderColor}\n    ${borderRadius}\n    ${maxWidth}\n    ${maxHeight}\n  `;\n\nexport interface CellProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AlignItemsProps,\n    DisplayProps,\n    ColorProps,\n    JustifyItemsProps,\n    GridRowProps,\n    OpacityProps,\n    GridColumnProps,\n    LineHeightProps,\n    SizingProps,\n    JustifyContentProps,\n    BordersProps,\n    SpaceProps,\n    SelfPositioningProps,\n    OverflowProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontSizeProps {\n  color?: string;\n}\n\nexport const Cell: React.FC<CellProps> = styled.div`\n    position: relative;\n    ${alignItems}\n    ${justifyContent}\n    ${opacity}\n    ${display}\n    ${borders}\n    ${borderColor}\n    ${borderRadius}\n    ${borderBottom}\n    ${justifyItems}\n    ${fontSize}\n    ${fontFamily}\n    ${alignSelf}\n    ${justifySelf}\n    ${gridColumn}\n    ${gridRow}\n    ${height}\n    ${width}\n    ${minHeight}\n    ${minWidth}\n    ${space}\n    ${color}\n    ${textAlign}\n    ${lineHeight}\n    ${alignItems}\n    ${maxWidth}\n    ${maxHeight}\n    ${overflow}\n    ${fontWeight}\n  `;\n\nexport const HoverableCell: React.FC<CellProps> = styled.div`\n  position: relative;\n  ${alignItems}\n  ${justifyContent}\n  ${opacity}\n  ${display}\n  ${borders}\n  ${borderColor}\n  ${borderRadius}\n  ${borderBottom}\n  ${justifyItems}\n  ${fontSize}\n  ${fontFamily}\n  ${alignSelf}\n  ${justifySelf}\n  ${gridColumn}\n  ${gridRow}\n  ${height}\n  ${width}\n  ${minHeight}\n  ${minWidth}\n  ${space}\n  ${color}\n  ${textAlign}\n  ${lineHeight}\n  ${alignItems}\n  ${maxWidth}\n  ${maxHeight}\n  ${overflow}\n  ${fontWeight}\n  &:hover {\n    cursor: pointer;\n    div,\n    svg {\n      color: ${theme.colors.link500};\n      d {\n        fill: ${theme.colors.link500} !important;\n      }\n    }\n  }\n`;\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\n\nexport const DfuseLogo = (props: object) => (\n  <svg viewBox=\"125 115 1050 260\" style={{ width: \"135px\", flex: \"0 0 auto\" }}>\n    <g fill=\"#ff4660\">\n      <path d=\"M606.8,178.6V359.7H577.5V342.9a46.9,46.9,0,0,1-18.7,13.9,62.9,62.9,0,0,1-24.5,4.6,69.08,69.08,0,0,1-33.8-8.3A59,59,0,0,1,477,329.6c-5.7-10.2-8.5-21.8-8.5-35s2.8-24.8,8.5-34.9a59.43,59.43,0,0,1,23.5-23.4,69.08,69.08,0,0,1,33.8-8.3,62.88,62.88,0,0,1,23.7,4.4,46.32,46.32,0,0,1,18.3,13.2V178.7h30.5Zm-49,151.6a35.47,35.47,0,0,0,13.9-14.3,47.87,47.87,0,0,0,0-43,36.78,36.78,0,0,0-13.9-14.3,41.7,41.7,0,0,0-39.6,0,35.47,35.47,0,0,0-13.9,14.3,47.87,47.87,0,0,0,0,43,36.78,36.78,0,0,0,13.9,14.3,39.62,39.62,0,0,0,19.8,5A38.87,38.87,0,0,0,557.8,330.2Z\" />\n      <path d=\"M680.5,222.5v7.8h35.9v24.4H681.5V359.6H651V254.7H629.5V230.3H651V222c0-14,4.1-25,12.2-33.1s19.6-12.1,34.4-12.1c11.7,0,20.9,2.4,27.6,7.1l-8.5,22.9a29,29,0,0,0-16.8-5.4C686.9,201.5,680.5,208.5,680.5,222.5Z\" />\n      <path d=\"M863,229.3V359.6H834V343a47.55,47.55,0,0,1-18.3,13.5,58.38,58.38,0,0,1-23.7,4.8c-17.4,0-31.1-4.8-41.1-14.5s-15-24-15-43.1V229.3h30.5v70.3c0,11.7,2.6,20.5,7.9,26.2s12.8,8.7,22.6,8.7c10.9,0,19.6-3.4,26-10.1s9.6-16.5,9.6-29.2V229.3Z\" />\n      <path d=\"M912.3,357.2c-10.1-2.8-18.1-6.3-24.2-10.5l11.7-23.2a77.38,77.38,0,0,0,21.1,9.4,86,86,0,0,0,24.3,3.5q27.3,0,27.3-14.4c0-4.6-2.3-7.7-7-9.5s-12.1-3.5-22.3-5.1a178.78,178.78,0,0,1-26.2-5.6,40,40,0,0,1-17.6-11.1c-5-5.3-7.4-12.6-7.4-22.1,0-12.4,5.2-22.2,15.5-29.6s24.3-11.1,41.8-11.1a116.69,116.69,0,0,1,26.8,3.1c8.9,2,16.3,4.8,22,8.2l-11.7,23.2a72.39,72.39,0,0,0-37.3-9.8c-8.9,0-15.7,1.3-20.4,4s-7,6.2-7,10.6c0,4.9,2.5,8.3,7.4,10.4s12.6,3.9,23.1,5.7a177.4,177.4,0,0,1,25.6,5.6A40.11,40.11,0,0,1,995,299.6c4.8,5,7.2,12.2,7.2,21.5,0,12.2-5.3,22-15.9,29.3s-25,11-43.2,11A123.58,123.58,0,0,1,912.3,357.2Z\" />\n      <path d=\"M1150.7,304.2H1048.5a35.63,35.63,0,0,0,14,22.8q11.4,8.4,28.2,8.4c14.3,0,26.1-4.7,35.4-14.2l16.3,18.8a55.94,55.94,0,0,1-22.2,15.9q-13.35,5.4-30.3,5.4c-14.3,0-26.9-2.8-37.8-8.5a61.85,61.85,0,0,1-25.3-23.8,71.64,71.64,0,0,1-.2-68.8,61.69,61.69,0,0,1,24-23.8c10.2-5.7,21.8-8.5,34.7-8.5,12.7,0,24,2.8,34,8.4a59.3,59.3,0,0,1,23.4,23.7c5.6,10.2,8.4,21.9,8.4,35.3A62.29,62.29,0,0,1,1150.7,304.2Zm-90.1-43.3q-10.2,8.7-12.3,23.1h73.9c-1.3-9.4-5.3-17.1-12-22.9s-15-8.8-24.9-8.8C1075.6,252.3,1067.3,255.1,1060.6,260.9Z\" />\n    </g>\n    <path\n      fill=\"#ff4660\"\n      d=\"M249.9,167.2h0c39.8,0,71.1,31.6,71.1,72,0,39.4-33.4,72.8-73.1,72.8H178.8V237.8c.1-39.7,31.3-70.6,71.1-70.6m0-47.6c-67.4,0-119.9,52.5-119.9,118.1V359.6H247.9c67.4,0,122.1-54.7,122.1-120.3A119.42,119.42,0,0,0,249.9,119.6Z\"\n    />\n  </svg>\n);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Cell } from '../../atoms/grid';\nimport { styled } from '../../theme';\nimport { fontSizes } from '../../theme/scales';\nimport { colors } from '../../theme/colors';\n\nconst MetricLabel = styled(Cell)`\n  color: ${colors.ternary500};\n  font-weight: normal;\n  letter-spacing: 0px;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 10px;\n  font-size: ${fontSizes[1]}px;\n  line-height: ${fontSizes[1]}px;\n`;\nconst MetricData = styled(Cell)`\n  color: ${colors.ternary1000};\n  font-weight: normal;\n  letter-spacing: 0px;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 5px;\n  font-size: ${fontSizes[3]}px;\n  line-height: ${fontSizes[3]}px;\n`;\n\nexport const WidgetMetricItem: React.FC<{\n  metricLabel: string;\n  metricData?: React.ReactNode;\n}> = ({ metricLabel, metricData }) => {\n  return (\n    <>\n      <MetricLabel>\n        {metricLabel}\n      </MetricLabel>\n      <MetricData>\n        {metricData}\n      </MetricData>\n    </>\n  );\n};\n","// max drift value we display on the gaph\nexport const MAX_GRAPH_DRIFT = 15 * 60 * 60;\nexport const INFINITE_DRIFT_THRESHOLD = 9000000000;\n\n// retain half an hour of data\nexport const DRIFT_RETENTION = 60;\n\nexport const MINDREADER_APP_ID = 'mindreader';\n\nexport type MetricConfig = {\n  headBlockNumber: boolean;\n  headBlockDrift: boolean;\n};\nexport const METRIC_CONFIG: Record<string, MetricConfig> = {\n  abicodec: {\n    headBlockNumber: true,\n    headBlockDrift: false\n  },\n  archive: {\n    headBlockNumber: true,\n    headBlockDrift: false\n  },\n  blockmeta: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  dashboard: {\n    headBlockNumber: false,\n    headBlockDrift: false\n  },\n  dgraphql: {\n    headBlockNumber: false,\n    headBlockDrift: false\n  },\n  indexer: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  'kvdb-loader': {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  live: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  mindreader: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  merger: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  relayer: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  },\n  router: {\n    headBlockNumber: false,\n    headBlockDrift: false\n  },\n  fluxdb: {\n    headBlockNumber: true,\n    headBlockDrift: true\n  }\n};\n","export const wait = (ms: number) => new Promise(r => setTimeout(r, ms));\n\nexport const retryFunc = async (func: Function, waitTime: number = 2000) => {\n  let keepTrying;\n\n  do {\n    try {\n      await func();\n      console.log(`calling function - ${func.name} succeeded`);\n      keepTrying = false;\n    } catch (error) {\n      console.log(\n        `calling function - ${func.name} threw error: ${error}, keep retrying after ${waitTime}ms`\n      );\n      keepTrying = true;\n    }\n    await wait(waitTime);\n  } while (keepTrying);\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DashboardClient, ServiceError } from '../../pb/dashboard_pb_service';\nimport { AppsListRequest } from '../../pb/dashboard_pb';\nimport * as PbDashboard from '../../pb/dashboard_pb';\n\nconst client = new DashboardClient(\n  process.env.REACT_APP_DASHBOARD_GRPC_WEB_URL || 'http://localhost:8080/api'\n);\n\nexport const getAppsList = async (): Promise<PbDashboard.AppsListResponse.AsObject | null> => {\n  const request = new AppsListRequest();\n  const res = await new Promise<PbDashboard.AppsListResponse.AsObject | null>(\n    (resolve, reject) => {\n      client.appsList(\n        request,\n        (\n          err: ServiceError | null,\n          response: PbDashboard.AppsListResponse | null\n        ) => {\n          if (err || !response) {\n            reject(err);\n          }\n          resolve(response?.toObject());\n        }\n      );\n    }\n  );\n  return res;\n};\n\nexport const tryGetAppsList = async () => {\n  const res = await getAppsList();\n  if (!res || !res.appsList || res.appsList.length <= 0)\n    throw new Error('apps list empty');\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { Dashboard } from \"../../pb/dashboard_pb_service\";\nimport { normalizeDrift, timestampToTimeString, stringToMoment } from \"../../utils/time\";\nimport { DRIFT_RETENTION } from \"../../utils/constants\";\nimport { retryFunc } from \"../../utils/retry\";\nimport { AppsMetricsRequest, AppMetricsResponse, MetricType } from \"../../pb/dashboard_pb\";\nimport { tryGetAppsList } from \"./apps-list\";\n\nexport type metricData = {\n  timestamp: string;\n  value: number;\n};\n\nexport type appMetric = {\n  id: string;\n  title: string;\n  headBlockDrift: metricData[];\n  headBlockNumber: number;\n};\n\nconst processDriftData = (\n  existingAppHeadBlockDrift: metricData[],\n  appMetric: AppMetricsResponse.AsObject,\n  maxCount: number\n): metricData[] => {\n  return appMetric.metricsList.reduce((resultArray: metricData[], d) => {\n    let newResultArray = resultArray;\n    if (resultArray.length > 0) {\n      const firstValidPoint = resultArray.findIndex((data) => {\n        const delta = d.timestamp!.seconds - stringToMoment(data.timestamp).unix();\n        return delta <= DRIFT_RETENTION;\n      });\n\n      if (firstValidPoint > 0) {\n        newResultArray = resultArray.slice(firstValidPoint);\n      }\n    }\n\n    // if not type drift, don't store it\n    if (d.type === MetricType.HEAD_BLOCK_TIME_DRIFT) {\n      newResultArray.push({\n        timestamp: timestampToTimeString(d.timestamp!.seconds),\n        value: normalizeDrift(d.value),\n      });\n    }\n    return newResultArray.slice(0, maxCount);\n  }, existingAppHeadBlockDrift);\n};\n\nconst processMetricEntry = (\n  metricObject: AppMetricsResponse.AsObject,\n  existingAppHeadBlockDrift: metricData[],\n  currentMaxBlockNumbers: { [key: string]: number },\n  maxCount: number\n): appMetric => {\n  let currentMaxBlockNumber = 0;\n  if (metricObject.id in currentMaxBlockNumbers) {\n    currentMaxBlockNumber = currentMaxBlockNumbers[metricObject.id];\n  }\n  const newMaxBlockNumber = Math.max(\n    ...metricObject.metricsList.reduce(\n      (resultArray: number[], d) => {\n        if (d.type === MetricType.HEAD_BLOCK_NUMBER) {\n          resultArray.push(d.value);\n        }\n        return resultArray;\n      },\n      [currentMaxBlockNumber]\n    )\n  );\n  currentMaxBlockNumbers[metricObject.id] = newMaxBlockNumber;\n\n  return Object.assign({}, metricObject, {\n    headBlockDrift: processDriftData(existingAppHeadBlockDrift, metricObject, maxCount),\n    headBlockNumber: newMaxBlockNumber,\n  });\n};\n\nexport function useStreamMetrics(params: { appId?: string; maxCount: number }): appMetric[] {\n  const { appId = \"\", maxCount = 100 } = params;\n  const [metrics, setMetrics] = useState<appMetric[]>([]);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  let currentMetrics: appMetric[] = [];\n  const currentHeadBlockNumbers: { [key: string]: number } = {};\n\n  // retry mechanism if client connection failed\n  let client: grpc.Client<grpc.ProtobufMessage, grpc.ProtobufMessage> | null = null;\n\n  const setCallbacks = (client: grpc.Client<grpc.ProtobufMessage, grpc.ProtobufMessage>) => {\n    client.onEnd(async (status: grpc.Code, statusMessage: string, trailers: grpc.Metadata) => {\n      let streaming = false;\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      await retryFunc(tryStreamMetrics);\n      streaming = true;\n      setIsStreaming(streaming);\n    });\n\n    client.onMessage((message: grpc.ProtobufMessage) => {\n      const metricObject = message.toObject() as AppMetricsResponse.AsObject;\n\n      const appMetricIndex = currentMetrics.findIndex((m) => m.id === metricObject.id);\n\n      // make new metric object for unseen app name\n      if (appMetricIndex === -1) {\n        const newMetricEntry = processMetricEntry(metricObject, [], currentHeadBlockNumbers, maxCount);\n        currentMetrics = [...currentMetrics, newMetricEntry];\n      } else {\n        // push metricData to existing app metric\n        const newMetricEntry = processMetricEntry(\n          metricObject,\n          currentMetrics[appMetricIndex].headBlockDrift,\n          currentHeadBlockNumbers,\n          maxCount\n        );\n        currentMetrics[appMetricIndex] = newMetricEntry;\n      }\n\n      setMetrics([...currentMetrics]);\n    });\n    setInitialized(true);\n  };\n\n  const tryStreamMetrics = async () => {\n    // block until AppsList grpc endpoint is live\n    await retryFunc(tryGetAppsList);\n    client = grpc.client(Dashboard.AppsMetrics, {\n      host: process.env.REACT_APP_DASHBOARD_GRPC_WEB_URL || \"http://localhost:8080/api\",\n    });\n\n    if (!client) console.log(\"error creating streaming client\");\n\n    client.start();\n    const request = new AppsMetricsRequest();\n    request.setFilterAppId(appId);\n\n    if (!initialized) {\n      setCallbacks(client);\n    }\n    if (client) {\n      try {\n        await client.send(request);\n      } catch (error) {\n        console.log(\"error trying to stream metrics: \", error);\n        throw error;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isStreaming || !initialized) {\n      retryFunc(tryStreamMetrics).then(() => setIsStreaming(true));\n    }\n  }, [isStreaming, initialized]);\n\n  return metrics;\n}\n","import moment from 'moment';\n\nexport const TIMESTAMP_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport const normalizeDrift = (rawDrift: number): number => {\n  if (rawDrift < 0) {\n    return 0;\n  }\n  return rawDrift;\n};\n\nexport const timestampToTimeString = (timestamp: number): string => {\n  return moment(timestamp, 'X').format(TIMESTAMP_FORMAT);\n};\n\nexport const stringToMoment = (timestamp: string): moment.Moment => {\n  return moment(timestamp, TIMESTAMP_FORMAT);\n};\n\nexport const durationToHuman = (duration: number): string => {\n  const d = moment.duration(duration * 1000);\n  return d.humanize();\n};\n\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\n\nconst pluralizeDays = (days: number): string => {\n  return `${days.toFixed(0)} day${days > 1 ? 's' : ''}`;\n};\n\nexport const durationToHumanBeta = (duration: number): string => {\n  if (duration === 0) {\n    return '0s';\n  } else if (duration < MINUTE) {\n    // under a minute\n    return `${duration.toFixed(2)}s`;\n  } else if (duration < HOUR) {\n    // under an hour\n    const min = Math.floor(duration / MINUTE);\n    const sec = duration - min * MINUTE;\n    return `${min.toFixed(0)}m ${sec.toFixed(0)}s`;\n  } else if (duration < DAY) {\n    // 54,000\n    // under a day\n    const hours = Math.floor(duration / HOUR);\n    const min = Math.floor((duration - hours * HOUR) / MINUTE);\n    return `${hours.toFixed(0)}h ${min.toFixed(0)}m`;\n  } else {\n    // greater then a day\n    const day = Math.floor(duration / DAY);\n    const hour = Math.floor((duration - day * DAY) / HOUR);\n    return `${pluralizeDays(day)} ${hour.toFixed(0)}h`;\n  }\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport {\n  useStreamMetrics,\n  appMetric\n} from '../services/data-providers/metrics';\n\nexport const context = createContext<appMetric[] | undefined>(undefined);\n\nexport function MetricsProvider(props: { children: React.ReactNode }) {\n  const [appMetrics, setAppMetrics] = useState<appMetric[]>([]);\n\n  const metrics = useStreamMetrics({\n    appId: '',\n    maxCount: 100\n  });\n  useEffect(() => {\n    setAppMetrics(metrics);\n  }, [metrics]);\n\n  return (\n    <context.Provider value={appMetrics}>{props.children}</context.Provider>\n  );\n}\n\nexport const useMetrics = () => useContext(context);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport NumberFormat from \"react-number-format\";\n\nexport const BlockNumberWrapper: React.FC<{\n  blockNumber?: number;\n}> = ({ blockNumber }) => {\n  if (blockNumber) {\n    return (<NumberFormat displayType={'text'} thousandSeparator={true} value={blockNumber} />)\n  } else {\n    return (<span>-</span>)\n  }\n};","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Row, Col } from 'antd';\nimport { WidgetMetricItem } from './header-metric-item';\nimport { useMetrics } from '../../context/metrics';\nimport {\n  MINDREADER_APP_ID\n} from '../../utils/constants';\nimport {BlockNumberWrapper} from \"./block-number\";\n\nexport const HeaderMetrics = () => {\n  const appMetrics = useMetrics();\n  const managerAppIndex = appMetrics?.findIndex(\n    metric => metric.id === MINDREADER_APP_ID\n  );\n\n  let managerHeadBlockNumber: (number|undefined) = undefined;\n  if(appMetrics && managerAppIndex && managerAppIndex !== -1) {\n    managerHeadBlockNumber = appMetrics[managerAppIndex].headBlockNumber;\n  }\n  return (\n    <>\n      <Row gutter={16}>\n        <Col className='gutter-row' span={6}>\n          <div>\n            <WidgetMetricItem\n              metricLabel={'Head Block Number'}\n              metricData={<BlockNumberWrapper blockNumber={managerHeadBlockNumber} />}\n            />\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { DfuseLogo } from './dfuse-logo';\nimport styled from '@emotion/styled';\nimport { Grid } from '../../atoms/grid';\nimport { Link } from 'react-router-dom';\nimport { Links } from '../../components/routes/paths';\nimport { HeaderMetrics } from '../widgets/header-metrics';\n\nconst HeaderStyled = styled(Grid)`\n  grid-template-columns: 250px 1fr;\n  width: 100%;\n  height: 85px;\n  align-items: center;\n  text-align: left;\n  margin-bottom: 10px;\n`;\n\nconst HeaderContentWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n`;\n\nexport function Header() {\n  return (\n    <HeaderStyled>\n      <Link to={Links.home()} style={{ textDecoration: 'none' }}>\n        <DfuseLogo />\n      </Link>\n      <HeaderContentWrapper>\n        <HeaderMetrics />\n      </HeaderContentWrapper>\n    </HeaderStyled>\n  );\n}\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { styled } from \"../../theme\";\nimport { colors } from \"../../theme/colors\";\nimport { Menu } from \"antd\";\nimport {\n  // faThLarge,\n  faTools,\n  // faCog,\n  faHome,\n  faSearch,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Cell } from \"../../atoms/grid\";\nimport { Link } from \"react-router-dom\";\nimport { Paths } from \"../routes/paths\";\n// import { useAppsList } from '../../context/apps-list';\n\nconst IconWrapper = styled(Cell)`\n  cursor: pointer;\n  font-size: 18px;\n  line-height: 18px;\n  display: inline-box;\n  width: 35px;\n  align-items: flex-start;\n  svg {\n    filter: drop-shadow(0px 5px 8px ${colors.ternary400});\n  }\n  &:hover {\n    color: ${colors.ternary300};\n  }\n`;\n\nconst MenuWrapper = styled(Cell)`\n  .ant-menu:first-child {\n    border-right: 0px;\n  }\n  .ant-menu {\n    background: none;\n  }\n\n  .ant-menu-submenu,\n  .ant-menu:first-child > .ant-menu-item {\n    margin-bottom: 30px;\n  }\n  .ant-menu .ant-menu-submenu-title,\n  .ant-menu:first-child > .ant-menu-item {\n    padding-left: 0px !important;\n    font-weight: 600;\n    height: 25px;\n    line-height: 25px;\n    overflow: visible;\n  }\n\n  .ant-menu.ant-menu-sub .ant-menu-item {\n    padding-left: 35px !important;\n    height: 25px;\n    line-height: 25px;\n  }\n\n  .ant-menu-submenu.unexpandable .ant-menu-submenu-title {\n    pointer-events: none;\n    i.ant-menu-submenu-arrow {\n      display: none;\n    }\n  }\n`;\n\nexport const SideMenu: React.FC = () => {\n  return (\n    <MenuWrapper>\n      <Menu style={{ width: \"230px\" }} defaultSelectedKeys={[\"0\"]} defaultOpenKeys={[\"apps\"]} mode=\"inline\">\n        <Menu.Item key=\"home\">\n          <Link to={Paths.home}>\n            <IconWrapper>\n              <FontAwesomeIcon icon={faHome} />\n            </IconWrapper>\n            <span>HOME</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"graphiql\">\n          <Link to={Paths.graphiql}>\n            <IconWrapper>\n              <FontAwesomeIcon icon={faTools} />\n            </IconWrapper>\n            <span>GRAPHiQL</span>\n          </Link>\n        </Menu.Item>\n        <Menu.Item key=\"eosqElese\">\n          {/* TODO: Must come from some config provided by the server */}\n          <a href=\"http://localhost:8081\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <IconWrapper>\n              <FontAwesomeIcon icon={faSearch} />\n            </IconWrapper>\n            <span>eosq</span>\n          </a>\n        </Menu.Item>\n      </Menu>\n    </MenuWrapper>\n  );\n};\n\n// const appsList = useAppsList();\n// return (\n//   <SubMenu\n//     className='unexpandable'\n//     key='apps'\n//     title={\n//       <span>\n//           <IconWrapper>\n//             <FontAwesomeIcon icon={faThLarge} />\n//           </IconWrapper>\n//           <span>APPS</span>\n//         </span>\n//     }\n//   >\n//     {appsList?.map(app => (\n//       <Menu.Item key={app.id}>\n//         {app.title.charAt(0).toUpperCase() + app.title.slice(1)}\n//       </Menu.Item>\n//     ))}\n//   </SubMenu>\n// )\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Cell, Grid } from '../../atoms/grid';\nimport { Header } from '../header/header';\nimport { SideMenu } from '../side-menu/side-menu';\nimport { styled } from '../../theme';\n\nconst MainWrapper = styled(Cell)`\n  margin: 0px auto;\n  min-width: 1200px;\n  width: 80%;\n`;\nconst ContentWrapper = styled(Grid)`\n  grid-template-columns: 250px 1fr;\n`;\n\nclass BaseLayout extends React.Component {\n  render() {\n    return (\n      <MainWrapper>\n        <Header />\n        <ContentWrapper pb={[6]}>\n          <SideMenu />\n          <Cell>{this.props.children}</Cell>\n        </ContentWrapper>\n      </MainWrapper>\n    );\n  }\n}\n\n/**\n * Higher-order component that wraps the provided Component with an AuthenticatedLayout\n */\nexport function withBaseLayout<T>(\n  Component: React.ComponentType<T>\n): React.ComponentType<T> {\n  return function withbaselayout2(props: T) {\n    return (\n      <BaseLayout>\n        <Component {...props} />\n      </BaseLayout>\n    );\n  };\n}\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { colors } from '../../theme/colors';\nimport styled from '@emotion/styled';\nimport { Cell } from '../../atoms/grid';\n\nconst WidgetStyled = styled(Cell)`\n  background: ${colors.white};\n  border-radius: 5px;\n  box-shadow: 0px 6px 9px rgba(10, 38, 58, 0.1);\n  height: 100% !important;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n`;\n\nexport const WidgetBox: React.FC<{\n  className?: string;\n  minHeight?: string;\n}> = ({ minHeight, children }) => (\n  <WidgetStyled minHeight={minHeight}>{children}</WidgetStyled>\n);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { fontSizes } from '../../theme/scales';\nimport { styled, theme } from '../../theme';\nimport { Cell } from '../../atoms/grid';\n\nconst WidgetContentStyled = styled(Cell)<{ backgroundColor?: string }>`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  height: auto;\n  font-size: ${fontSizes[1]}px!important;\n  background: ${props => props.backgroundColor};\n`;\n\nexport const WidgetContent: React.FC<{\n  widgetPaddingX?: number;\n  widgetPaddingY?: number;\n  backgroundColor?: string;\n  widgetPadding?: number;\n  asBorderTop?: boolean;\n  asBorderBottom?: boolean;\n}> = ({\n  backgroundColor,\n  widgetPaddingX,\n  widgetPaddingY,\n  widgetPadding,\n  asBorderTop,\n  asBorderBottom,\n  children\n}) => (\n  <WidgetContentStyled\n    backgroundColor={backgroundColor}\n    p={widgetPadding}\n    px={widgetPaddingX}\n    py={widgetPaddingY}\n    borderTop={\n      !asBorderTop ? '0px solid #fff' : '1px solid ' + theme.colors.ternary300\n    }\n    borderBottom={\n      !asBorderBottom\n        ? '0px solid #fff'\n        : '1px solid ' + theme.colors.ternary300\n    }\n  >\n    {children}\n  </WidgetContentStyled>\n);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { colors } from '../../theme/colors';\nimport styled from '@emotion/styled';\nimport { Typography } from 'antd';\nimport { fontSizes } from '../../theme/scales';\nimport { Cell } from '../../atoms/grid';\n\nconst { Title } = Typography;\n\nconst WidgetTitleWrapper = styled(Cell)<{ level?: number }>`\n  display: flex;\n  align-items: center;\n  padding: 25px 25px 20px;\n  position:relative;\n  h1 {\n    font-size: ${props =>\n      props.level ? fontSizes[props.level] : fontSizes[3]}px !important;\n    line-height: ${props =>\n      props.level ? fontSizes[props.level] : fontSizes[3]}px !important;\n  }\n  > :last-child {\n    margin-left: 10px;\n  }\n`;\n\nconst TitleStyled = styled(Title)`\n  color: ${colors.ternary500}!important;\n  font-weight: 400 !important;\n  letter-spacing: 0.3px !important;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 0px !important;\n`;\n\n// @todo impossible de mettre number to widgetTitleSize au lieu de any!!!!\nexport const WidgetTitle: React.FC<{\n  widgetTitleText: string;\n  widgetTitleSize?: any;\n}> = ({ widgetTitleText, widgetTitleSize, children }) => {\n  return (\n    <WidgetTitleWrapper level={widgetTitleSize}>\n      <TitleStyled>{widgetTitleText}</TitleStyled>\n      {children}\n    </WidgetTitleWrapper>\n  );\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { styled } from '../theme';\nimport { Cell } from './grid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faExclamation,\n  faTimes\n} from '@fortawesome/free-solid-svg-icons';\nimport { fontSizes } from '../theme/scales';\nimport { Tooltip, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nconst StatusIconWrapper = styled(Cell)<{\n  iconBackgroundColor?: string;\n  iconBorderColor?: string;\n}>`\n  width: 26px;\n  height: 26px;\n  background: ${props => props.iconBackgroundColor};\n  border: 1px solid ${props => props.iconBorderColor};\n  padding: 0px;\n  border-radius: 13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n\n  h1 {\n    font-size: ${props => fontSizes[1]}px !important;\n    line-height: ${props => fontSizes[1]}px !important;\n  }\n`;\n\ninterface AppStatusProps {\n  appStatus?: string;\n}\n\nexport const AppStatus = (props: AppStatusProps) => {\n  let iconCode, iconColor, BackgroundColor, BorderColor;\n\n  switch (props.appStatus) {\n    case 'NOTFOUND':\n      iconCode = faExclamation;\n      iconColor = '#fff';\n      BackgroundColor = '#ff4660';\n      BorderColor = '#ff4660';\n      break;\n    case 'CREATED':\n      iconCode = faCheck;\n      iconColor = '#fff';\n      BackgroundColor = '#219ce4';\n      BorderColor = '#219ce4';\n      break;\n    case 'RUNNING':\n      iconCode = faCheck;\n      iconColor = '#fff';\n      BackgroundColor = '#61d8c8';\n      BorderColor = '#61d8c8';\n      break;\n    case 'WARNING':\n      iconCode = faExclamation;\n      iconColor = '#fff';\n      BackgroundColor = '#ffb230';\n      BorderColor = '#ffb230';\n      break;\n    case 'STOPPED':\n      iconCode = faTimes;\n      iconColor = '#fff';\n      BackgroundColor = '#ff4660';\n      BorderColor = '#ff4660';\n      break;\n    default:\n      iconCode = faExclamation;\n      iconColor = '#fff';\n      BackgroundColor = '#ff4660';\n      BorderColor = '#ff4660';\n      break;\n  }\n\n  return (\n    <Tooltip\n      placement='top'\n      mouseEnterDelay={0.01}\n      mouseLeaveDelay={0.7}\n      title={<Text>{props.appStatus}</Text>}\n    >\n      <StatusIconWrapper\n        iconBackgroundColor={BackgroundColor}\n        iconBorderColor={BorderColor}\n      >\n        <FontAwesomeIcon color={iconColor} icon={iconCode} />\n      </StatusIconWrapper>\n    </Tooltip>\n  );\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { styled } from '../theme';\nimport Title from 'antd/lib/typography/Title';\nimport { colors } from '../theme/colors';\n\nexport const TitleStyled = styled(Title)`\n  color: ${colors.ternary500}!important;\n  font-weight: 400 !important;\n  letter-spacing: 0.3px !important;\n  font-family: 'Lato', sans-serif;\n`;\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { styled } from '../theme';\nimport { Cell } from './grid';\n\nexport const ColorLine = styled(Cell)`\n  display: block;\n  position: absolute;\n  border-width: 2px;\n  border-style: solid;\n  width: 100px;\n  height: 100px;\n  transform: rotate(-45deg) translate(-52px, -118px);\n  transform-origin: top left;\n`;\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { fontSizes } from '../../theme/scales';\nimport { styled } from '../../theme';\nimport { Cell } from '../../atoms/grid';\nimport { AppStatus } from '../../atoms/status';\nimport { TitleStyled } from '../../atoms/typography';\nimport { ColorLine } from '../../atoms/color-line';\nimport { BlockNumberWrapper } from './block-number';\nimport { Col, Row } from 'antd';\nimport { colors } from '../../theme/colors';\nimport { durationToHumanBeta } from '../../utils/time';\nimport { MetricConfig, INFINITE_DRIFT_THRESHOLD } from '../../utils/constants';\n\nconst WidgetAppStyled = styled(Cell)`\n  display: flex;\n  font-size: 20px;\n  flex-direction: column;\n  font-size: ${fontSizes[1]}px !important;\n  position: relative;\n  overflow: hidden;\n  min-height: 220px;\n  padding: 30px 30px 30px 30px;\n`;\n\nconst WidgetTitleWrapper = styled(Cell)<{ level?: number }>`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  h1 {\n    flex-grow: 1;\n    margin: 0;\n    font-size: ${props =>\n      props.level ? fontSizes[props.level] : fontSizes[3]}px !important;\n    line-height: ${props =>\n      props.level ? fontSizes[props.level] : fontSizes[3]}px !important;\n  }\n  > :last-child {\n    flex-grow: 0;\n  }\n`;\n\nconst DescriptionWrapper = styled(Cell)`\n  display: block;\n  width: 100%;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  line-height: 1.5em;\n  margin: 0px;\n  min-height: 50px;\n`;\n\nconst MetricLabel = styled(Cell)`\n  color: ${colors.ternary500};\n  font-weight: normal;\n  letter-spacing: 0px;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 5px;\n  font-size: ${fontSizes[0]}px;\n  line-height: ${fontSizes[0]}px;\n`;\n\nconst MetricData = styled(Cell)`\n  color: ${colors.ternary1000};\n  font-weight: normal;\n  letter-spacing: 0px;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 5px;\n  font-size: ${fontSizes[1]}px;\n  line-height: ${fontSizes[1]}px;\n`;\n\nexport type appInfo = {\n  color?: string;\n  title?: string;\n  description?: string;\n  status?: string;\n  drift?: number;\n  headBlockNumber?: number;\n  metricConfig?: MetricConfig;\n};\n\nexport const WidgetApp: React.FC<{\n  onNavigate?: () => void;\n  appInfo: appInfo;\n}> = props => {\n  const {\n    appInfo: {\n      color,\n      title,\n      description,\n      status,\n      drift,\n      headBlockNumber,\n      metricConfig\n    }\n  } = props;\n\n  let driftToDisplay = '0 sec';\n\n  if (drift) {\n    if (drift < INFINITE_DRIFT_THRESHOLD) {\n      driftToDisplay = durationToHumanBeta(drift);\n    } else {\n      driftToDisplay = '∞';\n    }\n  }\n  return (\n    <WidgetAppStyled>\n      <ColorLine borderColor={color} />\n      <AppStatus appStatus={status} />\n      <WidgetTitleWrapper level={3}>\n        <TitleStyled>{title}</TitleStyled>\n      </WidgetTitleWrapper>\n      <DescriptionWrapper>{description}</DescriptionWrapper>\n      <Row gutter={[1, 0]} justify='space-between'>\n        {metricConfig && metricConfig.headBlockDrift && (\n          <Col className='gutter-row'>\n            <MetricLabel>drift</MetricLabel>\n            <MetricData>{driftToDisplay}</MetricData>\n          </Col>\n        )}\n        {metricConfig && metricConfig.headBlockNumber && (\n          <Col\n            className='gutter-row'\n            style={{ float: 'right', textAlign: 'right' }}\n          >\n            <MetricLabel>head block #</MetricLabel>\n            <MetricData>\n              <BlockNumberWrapper blockNumber={headBlockNumber} />\n            </MetricData>\n          </Col>\n        )}\n      </Row>\n    </WidgetAppStyled>\n  );\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {useState} from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { appMetric } from '../../services/data-providers/metrics';\nimport { METRIC_CONFIG, MAX_GRAPH_DRIFT } from '../../utils/constants';\nimport { getAppColor } from '../../theme/colors';\nimport { Button } from 'antd'\nimport { AreaChartOutlined } from '@ant-design/icons';\n\n\nconst chartWrapperStyle = {\n};\nconst chartActionWrapperStyle = {\n  paddingBottom: \"40px\",\n  marginRight: \"10px\"\n};\n\nconst chartOptions =  (isLogarithmic: boolean): any =>  {\n  return {\n    responsive: true,\n    title: {\n      display: false,\n      text: 'Head Block Drift (secs)'\n    },\n    tooltips: {\n      callbacks: {}\n    },\n    legend: {\n      position: 'top'\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Drift time in seconds',\n            fontColor: '#9fadbc'\n          },\n          type: (isLogarithmic ? 'logarithmic' : 'linear'),\n          gridLines: {\n            color: '#f0f3f5'\n          },\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ],\n      xAxes: [\n        {\n          scaleLabel: {\n            display: true,\n            labelString: 'Time',\n            fontColor: '#9fadbc'\n          },\n          type: 'time',\n          distribution: 'linear',\n          gridLines: {\n            color: '#f0f3f5'\n          },\n          time: {\n            unit: 'second',\n            stepSize: 3,\n            displayFormats: {\n              second: 'H:mm:ss'\n            }\n          }\n        }\n      ]\n    }\n  }\n};\n\n\nconst cleanData = (appMetrics: appMetric[]): any[] => {\n  const datasets: any[] = [];\n  appMetrics.forEach(function(appMetric) {\n    const metricConfig = METRIC_CONFIG[appMetric.id];\n    if (metricConfig && metricConfig.headBlockDrift) {\n      const filteredHeadBlockDrifts = appMetric.headBlockDrift.filter(\n        value => value.value < MAX_GRAPH_DRIFT\n      );\n      datasets.push({\n        label: appMetric.title,\n        backgroundColor: 'transparent',\n        pointBackgroundColor: getAppColor(appMetric.id),\n        borderColor: getAppColor(appMetric.id),\n        pointRadius: 2,\n        fill: false,\n        data: filteredHeadBlockDrifts.map((d, i) => ({\n          x: d.timestamp,\n          y: d.value\n        })),\n        borderWidth: 1\n      });\n    }\n  });\n  return datasets;\n};\n\nexport const DriftGraph: React.FC<{ data: appMetric[] | undefined }> = ({\n  data\n}) => {\n  const [isLogarithmic, setIsLogarithmic] = useState(false);\n\n  if (!data) return null;\n  const chartDataset = {\n    datasets: cleanData(data)\n  };\n\n  const  toggleScaleType = () =>{\n    setIsLogarithmic(!isLogarithmic)\n  };\n\n  return (\n    <div style={chartWrapperStyle}>\n      <Line data={chartDataset} options={chartOptions(isLogarithmic)} height={100} />\n      <div style={chartActionWrapperStyle}>\n        <Button size={'small'} onClick={toggleScaleType} type=\"primary\" style={{float: 'right'}}  icon={<AreaChartOutlined />}>\n          { isLogarithmic ? 'Set linear scale' : 'Set logarithmic scale'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect } from \"react\";\nimport { AppsInfoRequest, AppsInfoResponse, AppStatus, AppInfo } from \"../../pb/dashboard_pb\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport { Dashboard } from \"../../pb/dashboard_pb_service\";\nimport { retryFunc } from \"../../utils/retry\";\nimport { tryGetAppsList } from \"./apps-list\";\n\nexport type AppStatusDisplay = {\n  name: string;\n  description: string;\n  status: string;\n};\n\nexport function useStreamStatus(params: { appId?: string }): AppInfo.AsObject[] {\n  const { appId = \"\" } = params;\n  const [appsStatus, setAppsStatus] = useState<AppInfo.AsObject[]>([]);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  let currentAppsStatus: AppInfo.AsObject[] = [];\n\n  // retry mechanism if client connection failed\n  let client: grpc.Client<grpc.ProtobufMessage, grpc.ProtobufMessage> | null = null;\n\n  const setCallbacks = (client: grpc.Client<grpc.ProtobufMessage, grpc.ProtobufMessage>) => {\n    client.onEnd(async (status: grpc.Code, statusMessage: string, trailers: grpc.Metadata) => {\n      setAppsStatus([]);\n      let streaming = false;\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      await retryFunc(tryStreamStatus);\n      streaming = true;\n      setIsStreaming(streaming);\n    });\n\n    client.onMessage((message: grpc.ProtobufMessage) => {\n      const appsStatusObject = message.toObject() as AppsInfoResponse.AsObject;\n      appsStatusObject.appsList.forEach((newStatus) => {\n        const appStatusIndex = currentAppsStatus.findIndex((m) => m.id === newStatus.id);\n\n        // make new status object for unseen app name\n        if (appStatusIndex === -1) {\n          currentAppsStatus = [...currentAppsStatus, newStatus];\n        } else {\n          // push new status to existing app\n          currentAppsStatus[appStatusIndex] = newStatus;\n        }\n      });\n\n      setAppsStatus([...currentAppsStatus]);\n    });\n    setInitialized(true);\n  };\n  const tryStreamStatus = async () => {\n    // block until AppsList grpc endpoint is live\n    await retryFunc(tryGetAppsList);\n    client = grpc.client(Dashboard.AppsInfo, {\n      host: process.env.REACT_APP_DASHBOARD_GRPC_WEB_URL || \"http://localhost:8080/api\",\n    });\n\n    if (!client) console.log(\"error creating AppsInfo streaming client\");\n\n    client.start();\n    const request = new AppsInfoRequest();\n    request.setFilterAppId(appId);\n\n    if (!initialized) {\n      setCallbacks(client);\n    }\n    if (client) {\n      try {\n        await client.send(request);\n      } catch (error) {\n        console.log(\"error trying to stream app status: \", error);\n        throw error;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isStreaming || !initialized) {\n      retryFunc(tryStreamStatus).then(() => setIsStreaming(true));\n    }\n  }, [isStreaming, initialized]);\n\n  return appsStatus;\n}\n\n// Construct a reverse map from proto to make sure AppStatus number is the correct type in string\nexport const AppStatusNumberToStringMap = Object.values(AppStatus).reduce((map, statusNumber, index) => {\n  map[statusNumber] = Object.keys(AppStatus)[index];\n  return map;\n}, {});\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getAppsList } from '../services/data-providers/apps-list';\nimport * as PbDashboard from '../pb/dashboard_pb';\nimport { AppStatusNumberToStringMap } from '../services/data-providers/status';\nimport { retryFunc } from '../utils/retry';\n\nexport const context = createContext<AppInfoToDisplay[] | null>(null);\n\nexport interface AppInfoToDisplay extends PbDashboard.AppInfo.AsObject {\n  statusString: string;\n}\n\nexport function AppsListProvider(props: { children: React.ReactNode }) {\n  const [apps, setApps] = useState<AppInfoToDisplay[] | null>(null);\n\n  const tryGetAppsList = async () => {\n    const res = await getAppsList();\n    if (!res || !res.appsList || res.appsList.length <= 0)\n      throw new Error('apps list empty');\n    const appsList = res.appsList\n      .map(app => {\n        return {\n          ...app,\n          statusString: AppStatusNumberToStringMap[app.status]\n        };\n      })\n      .sort((a, b) => a.id.localeCompare(b.id));\n    setApps(appsList);\n  };\n\n  // As soon as this provider is instanciated, it fetches it's data\n  useEffect(() => {\n    retryFunc(tryGetAppsList);\n  }, []);\n\n  return <context.Provider value={apps}>{props.children}</context.Provider>;\n}\n\nexport const useAppsList = () => useContext(context);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport {\n  useStreamStatus,\n  AppStatusDisplay,\n  AppStatusNumberToStringMap\n} from '../services/data-providers/status';\n\nexport const context = createContext<AppStatusDisplay[] | undefined>(undefined);\n\nexport function StatusProvider(props: { children: React.ReactNode }) {\n  const [appsStatus, setAppsStatus] = useState<AppStatusDisplay[]>([]);\n\n  const newAppsStatus = useStreamStatus({\n    appId: ''\n  });\n\n  useEffect(() => {\n    setAppsStatus(\n      newAppsStatus.map(appStatus => ({\n        name: appStatus.id,\n        description: appStatus.description,\n        status: AppStatusNumberToStringMap[appStatus.status]\n      }))\n    );\n  }, [newAppsStatus]);\n\n  return (\n    <context.Provider value={appsStatus}>{props.children}</context.Provider>\n  );\n}\n\nexport const useStatus = () => useContext(context);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { withBaseLayout } from '../components/layout/layout';\nimport { WidgetBox } from '../components/widgets/widget-box';\nimport { Col, Row } from 'antd';\nimport { WidgetContent } from '../components/widgets/widget-content';\nimport { WidgetTitle } from '../components/widgets/widget-title';\nimport { WidgetApp, appInfo } from '../components/widgets/widget-app';\nimport { DriftGraph } from '../components/drift-graph/drift-graph';\nimport { history } from '../services/history';\nimport { useAppsList, AppInfoToDisplay } from '../context/apps-list';\nimport { useMetrics } from '../context/metrics';\nimport { useStatus } from '../context/status';\nimport { appMetric } from '../services/data-providers/metrics';\nimport { AppStatusDisplay } from '../services/data-providers/status';\nimport { getAppColor } from '../theme/colors';\nimport { METRIC_CONFIG } from '../utils/constants';\n\nconst renderAppWidgets = (\n  appsList: AppInfoToDisplay[] | null,\n  appsStatus: AppStatusDisplay[] | undefined,\n  metrics: appMetric[] | undefined\n) =>\n  appsList?.map(app => {\n    const appMetric = metrics?.filter(m => m.id === app.id)[0];\n    const appStatus = appsStatus?.filter(a => a.name === app.id)[0];\n    const appDrift = appMetric?.headBlockDrift.slice(-1)[0]?.value;\n    const appHeadBlockNumber = appMetric?.headBlockNumber;\n    const appMetricConfig = METRIC_CONFIG[app.id];\n    const info: appInfo = {\n      color: getAppColor(app.id),\n      title: app.title.toUpperCase(),\n      description: app.description,\n      status: appStatus?.status,\n      drift: appDrift,\n      headBlockNumber: appHeadBlockNumber,\n      metricConfig: appMetricConfig\n    };\n    return (\n      <Col className='gutter-row' span={8} key={`col-${app.id}-graph`}>\n        <WidgetBox>\n          <WidgetApp appInfo={info} onNavigate={() => history.push(app.id)} />\n        </WidgetBox>\n      </Col>\n    );\n  });\n\nconst BaseHomePage: React.FC = () => {\n  const appsList = useAppsList();\n  const appsStatus = useStatus();\n  const appMetrics = useMetrics();\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col className='gutter-row' span={24} key={'col-drif-graph'}>\n          <WidgetBox>\n            <WidgetTitle\n              widgetTitleSize={3}\n              widgetTitleText={'Head Block Drift'}\n            />\n            <WidgetContent>\n              <DriftGraph data={appMetrics} />\n            </WidgetContent>\n          </WidgetBox>\n        </Col>\n        {renderAppWidgets(appsList, appsStatus, appMetrics)}\n      </Row>\n    </>\n  );\n};\n\nexport const HomePage = withBaseLayout(BaseHomePage);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState } from 'react';\nimport { styled } from '../../theme';\nimport { Checkbox, Col, Row, Timeline } from 'antd';\nimport { WidgetTitle } from './widget-title';\nimport { colors } from '../../theme/colors';\nimport { fonts } from '../../theme/fonts';\n\nconst TimelineWrapper = styled.div`\n  &.logs .ant-timeline-item {\n    opacity: 0;\n    height: 0px;\n    max-height: 0px;\n    padding-bottom: 0px;\n    transition: max-height 1s, opacity 0.2s 0.2s ease;\n  }\n  &.logs.info .ant-timeline-item.info,\n  &.logs.error .ant-timeline-item.error,\n  &.logs.debug .ant-timeline-item.debug,\n  &.logs.warn .ant-timeline-item.warn {\n    opacity: 1;\n    height: auto;\n    max-height: 1000px;\n    padding-bottom: 20px;\n  }\n\n  font-family: ${fonts.mono};\n  .ant-timeline.ant-timeline-label .ant-timeline-item-label {\n    width: calc(25% - 12px);\n  }\n  .ant-timeline.ant-timeline-label .ant-timeline-item-tail {\n    left: 25%;\n    border-left: 2px solid ${colors.ternary250};\n    top: 8px;\n  }\n  .ant-timeline-item-head.ant-timeline-item-head-blue {\n    left: 25%;\n    top: -2px;\n  }\n  .ant-timeline.ant-timeline-label .ant-timeline-item-content {\n    left: calc(25% - 4px);\n    width: calc(75% - 14px);\n  }\n  .ant-timeline-item.info .ant-timeline-item-head {\n    border-color: ${colors.appColors[8]};\n  }\n  .ant-timeline-item.debug .ant-timeline-item-head {\n    border-color: ${colors.link700};\n  }\n  .ant-timeline-item.warn .ant-timeline-item-head {\n    border-color: ${colors.alert1000};\n  }\n  .ant-timeline-item.error .ant-timeline-item-head {\n    border-color: ${colors.primary6};\n  }\n  .ant-timeline-item.info .log-label {\n    color: ${colors.appColors[8]};\n  }\n  .ant-timeline-item.debug .log-label {\n    color: ${colors.link700};\n  }\n  .ant-timeline-item.warn .log-label {\n    color: ${colors.alert1000};\n  }\n  .ant-timeline-item.error .log-label {\n    color: ${colors.primary6};\n  }\n`;\n\nconst plainOptions = ['INFO', 'DEBUG', 'ERROR', 'WARN'];\n\ninterface Log {\n  timestamp: string;\n  tag: string;\n  description: string;\n}\n\nexport interface LogsProps {\n  logs: Log[];\n}\n\nexport const WidgetLogs = (props: LogsProps) => {\n  const [logsClass, setlogsClass] = useState('logs error warn');\n\n  function onChange(checkedValues: any) {\n    setlogsClass(\n      'logs ' +\n        checkedValues\n          .toString()\n          .replace(/,/g, ' ')\n          .toLowerCase()\n    );\n  }\n\n  return (\n    <TimelineWrapper className={logsClass}>\n      <Row gutter={[16, 16]} justify='space-between' align='middle'>\n        <Col className='gutter-row'>\n          <WidgetTitle widgetTitleSize={4} widgetTitleText={'Logs'} />\n        </Col>\n        <Col className='gutter-row' style={{ paddingRight: '25px' }}>\n          <Checkbox.Group\n            options={plainOptions}\n            defaultValue={['ERROR', 'WARN']}\n            onChange={onChange}\n          />\n        </Col>\n      </Row>\n      <Timeline mode='left'>\n        {props.logs.map((log: Log) => (\n          <Timeline.Item\n            className={log.tag.toLowerCase()}\n            label={log.timestamp}\n          >\n            <div className='log-label'>{log.tag.toUpperCase()}</div>\n            {log.description}\n          </Timeline.Item>\n        ))}\n      </Timeline>\n    </TimelineWrapper>\n  );\n};\n","import React from 'react';\nimport { withBaseLayout } from '../components/layout/layout';\nimport { Col, Row } from 'antd';\nimport { WidgetBox } from '../components/widgets/widget-box';\nimport { WidgetContent } from '../components/widgets/widget-content';\nimport { WidgetTitle } from '../components/widgets/widget-title';\nimport { WidgetLogs } from '../components/widgets/widget-logs';\n// import { styled } from '../theme';\n// import { Cell } from '../atoms/grid';\nimport { DriftGraph } from '../components/drift-graph/drift-graph';\nimport appMetrics from '../components/drift-graph/drift-data-sample.json';\nimport { WidgetMetricItem } from '../components/widgets/header-metric-item';\nimport { AppStatus } from '../atoms/status';\nimport { colors } from '../theme/colors';\n\nconst BaseMockPage = () => {\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col className='gutter-row' span={24}>\n          <WidgetBox>\n            <WidgetTitle widgetTitleSize={5} widgetTitleText={'Mock'}>\n              <AppStatus appStatus={'RUNNING'} />\n            </WidgetTitle>\n            <WidgetContent\n              widgetPadding={25}\n              asBorderBottom\n              asBorderTop\n              backgroundColor={colors.ternary200}\n            >\n              <Row gutter={[16, 0]} justify='space-between'>\n                <Col className='gutter-row'>\n                  <div>\n                    <WidgetMetricItem\n                      metricLabel={'Current Drift Time'}\n                      metricData={'200ms'}\n                    />\n                  </div>\n                </Col>\n                <Col className='gutter-row'>\n                  <div>\n                    <WidgetMetricItem\n                      metricLabel={'Current Head Block Number'}\n                      metricData={12323400}\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </WidgetContent>\n            <WidgetContent asBorderBottom>\n              <DriftGraph data={appMetrics} />\n            </WidgetContent>\n            <WidgetContent>\n              <WidgetLogs\n                logs={[\n                  {\n                    timestamp: '2020-03-17T14:40:22.952',\n                    tag: 'INFO',\n                    description: `thread-0 chain_plugin.cpp:426\n              operator() ] Support for builtin protocol feature\n              'PREACTIVATE_FEATURE' (with digest of\n              '0ec7e080177b2c02b278d5088611686b49d739925a92d9bfcacd7fc6b74053bd')\n              is enabled without activation restrictions`\n                  },\n                  {\n                    timestamp: '2020-03-17T14:40:22.961',\n                    tag: 'DEBUG',\n                    description: `thread-0 chain_plugin.cpp:595 plugin_initialize ]\n                    initializing chain plugin`\n                  },\n                  {\n                    timestamp: '2020-03-17T14:40:22.952',\n                    tag: 'ERROR',\n                    description: `thread-0 chain_plugin.cpp:426\n              operator() ] Support for builtin protocol feature\n              'PREACTIVATE_FEATURE' (with digest of\n              '0ec7e080177b2c02b278d5088611686b49d739925a92d9bfcacd7fc6b74053bd')\n              is enabled without activation restrictions`\n                  },\n                  {\n                    timestamp: '2020-03-17T14:40:22.951',\n                    tag: 'WARN',\n                    description: `thread-0 chain_plugin.cpp:595 plugin_initialize ]\n                    initializing chain plugin`\n                  }\n                ]}\n              />\n            </WidgetContent>\n          </WidgetBox>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport const MockPage = withBaseLayout(BaseMockPage);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { withBaseLayout } from \"../components/layout/layout\";\nimport { WidgetBox } from \"../components/widgets/widget-box\";\nimport { Col, Row } from \"antd\";\nimport { WidgetContent } from \"../components/widgets/widget-content\";\nimport Iframe from \"react-iframe\";\n\nconst BaseGraphiQLPage: React.FC = () => {\n  return (\n    <>\n      <Row gutter={[16, 16]}>\n        <Col className=\"gutter-row\" span={24} key={\"col-drif-graph\"}>\n          <WidgetBox>\n            <WidgetContent>\n              <Iframe url=\"http://localhost:8080/graphiql\" width=\"100%\" height=\"900px\" frameBorder={0} />\n            </WidgetContent>\n          </WidgetBox>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport const GrapiQLPage = withBaseLayout(BaseGraphiQLPage);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { withRouter } from \"react-router\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { RouteComponentProps } from \"react-router\";\nimport React from \"react\";\nimport { Paths } from \"./paths\";\nimport { HomePage } from \"../../pages/home\";\nimport { MockPage } from \"../../pages/mock\";\nimport { GrapiQLPage } from \"../../pages/graphiql\";\n\nconst RoutesBase: React.FC<RouteComponentProps> = () => {\n  // FIXME: Commented for now\n  // const appsList = useAppsList();\n  // const routesToComponent = (appName: string) => <TemplatePage appId={appName} />;\n\n  // {appsList?.map((app) => {\n  //   const { id } = app;\n  //   return <Route key={`app-page-${id}`} exact={true} path={`/${id}`} render={() => routesToComponent(id)} />;\n  // })}\n\n  return (\n    <Switch>\n      <Route exact={true} path={Paths.home} component={HomePage} />\n      <Route exact={true} path={Paths.graphiql} component={GrapiQLPage} />\n      <Route exact={true} path={Paths.mock} component={MockPage} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\nexport const Routes = withRouter(RoutesBase);\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport './App.css';\nimport { Router } from 'react-router-dom';\nimport { Routes } from './components/routes/routes';\nimport { history } from './services/history';\nimport { theme } from './theme';\nimport { ThemeProvider } from 'emotion-theming';\nimport { AppsListProvider } from './context/apps-list';\nimport { MetricsProvider } from './context/metrics';\nimport { StatusProvider } from './context/status';\n\nfunction App() {\n  return (\n    <AppsListProvider>\n      <StatusProvider>\n        <MetricsProvider>\n          <ThemeProvider theme={theme}>\n            <Router history={history}>\n              <Routes />\n            </Router>\n          </ThemeProvider>\n        </MetricsProvider>\n      </StatusProvider>\n    </AppsListProvider>\n  );\n}\n\nexport default App;\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Copyright 2019 dfuse Platform Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport dotenv from 'dotenv';\n\ndotenv.config();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n// package: dashboard\n// file: dashboard.proto\n\nvar dashboard_pb = require(\"./dashboard_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Dashboard = (function () {\n  function Dashboard() {}\n  Dashboard.serviceName = \"dashboard.Dashboard\";\n  return Dashboard;\n}());\n\nDashboard.AppsList = {\n  methodName: \"AppsList\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: false,\n  requestType: dashboard_pb.AppsListRequest,\n  responseType: dashboard_pb.AppsListResponse\n};\n\nDashboard.AppsInfo = {\n  methodName: \"AppsInfo\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: true,\n  requestType: dashboard_pb.AppsInfoRequest,\n  responseType: dashboard_pb.AppsInfoResponse\n};\n\nDashboard.AppsMetrics = {\n  methodName: \"AppsMetrics\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: true,\n  requestType: dashboard_pb.AppsMetricsRequest,\n  responseType: dashboard_pb.AppMetricsResponse\n};\n\nDashboard.Dmesh = {\n  methodName: \"Dmesh\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: false,\n  requestType: dashboard_pb.DmeshRequest,\n  responseType: dashboard_pb.DmeshResponse\n};\n\nDashboard.StartApp = {\n  methodName: \"StartApp\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: false,\n  requestType: dashboard_pb.StartAppRequest,\n  responseType: dashboard_pb.StartAppResponse\n};\n\nDashboard.StopApp = {\n  methodName: \"StopApp\",\n  service: Dashboard,\n  requestStream: false,\n  responseStream: false,\n  requestType: dashboard_pb.StopAppRequest,\n  responseType: dashboard_pb.StopAppResponse\n};\n\nexports.Dashboard = Dashboard;\n\nfunction DashboardClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nDashboardClient.prototype.appsList = function appsList(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Dashboard.AppsList, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nDashboardClient.prototype.appsInfo = function appsInfo(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(Dashboard.AppsInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nDashboardClient.prototype.appsMetrics = function appsMetrics(requestMessage, metadata) {\n  var listeners = {\n    data: [],\n    end: [],\n    status: []\n  };\n  var client = grpc.invoke(Dashboard.AppsMetrics, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onMessage: function (responseMessage) {\n      listeners.data.forEach(function (handler) {\n        handler(responseMessage);\n      });\n    },\n    onEnd: function (status, statusMessage, trailers) {\n      listeners.status.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners.end.forEach(function (handler) {\n        handler({ code: status, details: statusMessage, metadata: trailers });\n      });\n      listeners = null;\n    }\n  });\n  return {\n    on: function (type, handler) {\n      listeners[type].push(handler);\n      return this;\n    },\n    cancel: function () {\n      listeners = null;\n      client.close();\n    }\n  };\n};\n\nDashboardClient.prototype.dmesh = function dmesh(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Dashboard.Dmesh, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nDashboardClient.prototype.startApp = function startApp(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Dashboard.StartApp, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nDashboardClient.prototype.stopApp = function stopApp(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Dashboard.StopApp, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.DashboardClient = DashboardClient;\n\n"],"sourceRoot":""}