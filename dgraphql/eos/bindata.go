// Copyright 2019 dfuse Platform Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-bindata. DO NOT EDIT.
// sources:
// block.graphql (2.438kB)
// blockmeta.graphql (310B)
// query.graphql (3.74kB)
// query_alpha.graphql (3.049kB)
// schema.graphql (59B)
// search_transaction.graphql (3.116kB)
// subscription.graphql (3.198kB)
// tokenmeta.graphql (2.813kB)
// transactions.graphql (15.6kB)

package eos

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _blockGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x4c\x7c\xc9\x2e\x60\xf4\xb0\x7b\xd3\x6d\xd3\x14\xa8\x91\x34\x0d\xd6\xe9\x5e\x8a\x62\x41\x93\x23\x69\x10\x89\xa3\xf2\xc3\xae\x51\xf4\xbf\x2f\x48\x8a\xa2\xec\xa8\x2d\x16\xbd\x89\xe2\xcc\x9b\x37\x5f\x8f\xee\x34\x20\xdc\x74\x2c\x9f\xe1\xeb\x0a\x00\x60\xbd\x5e\x6f\x6f\x81\x6b\x70\x2d\x59\xd8\x87\x9b\x57\xb0\x75\x40\x16\x04\x78\x4d\x9f\x3d\xc2\xc0\xa4\x1d\x1a\x70\x3c\xb7\x5a\xaf\xd7\x11\x81\x54\x05\x3b\x67\x48\x37\x57\xab\x0c\xb9\xc3\xcf\x1e\xb5\x23\xd1\x81\xf6\xfd\x1e\xcd\x79\x04\x60\x0d\xae\x45\x90\xad\x20\xfd\x0a\x3e\xe8\x8e\x9e\x31\xfe\x69\x85\x6d\x37\x40\x31\xbe\x66\x97\x19\xec\x51\x0a\x6f\x31\xa0\xd4\x6c\x9e\x51\x25\x1c\x3b\x91\xd0\xbe\xaf\xe0\x03\x69\xf7\xe7\x1f\x85\xc5\x53\x8b\x70\x2f\xac\x83\xad\x31\x78\x40\x63\x69\xdf\xe5\xec\x47\x5a\x91\x53\xa4\x11\x22\xee\x85\x45\x05\xc2\x45\x2a\xb7\x8f\xbc\x03\xc9\xda\xa2\xb6\xde\x42\x27\x4e\x68\xa6\x78\x6a\x60\x7b\xbf\xbd\x79\x58\x0a\xbb\xd5\x8a\xa4\x70\x68\xe1\xd8\xa2\x6b\x73\x94\x94\x39\x59\xa0\x19\x9b\x52\xc5\xd9\xcf\x0a\x6e\x98\x3b\x14\xba\x60\xbe\x45\xa1\xd0\xc0\xff\x6c\x4d\x1b\xbd\xaa\x94\x72\x82\x28\x90\x0f\xa5\x31\x46\x68\x2b\xa4\x23\xd6\x50\xb3\xd7\x0a\x48\xcf\xe0\xec\x26\x1d\xc8\xc6\xba\x94\x86\x5e\xe3\x17\x94\xde\xa1\xba\x3e\x83\x90\xec\xb5\x9b\x38\x64\x9b\xa7\x62\xf1\x3a\x18\xbc\xac\xdb\x3d\x59\x77\x41\xc7\x86\x06\x38\x41\x1a\x2f\x38\x4d\xf0\x33\xe3\x27\x23\x24\xda\xdf\x6a\x32\x76\x42\xdf\x40\x27\xe6\xa7\x3d\xd6\x6c\x30\x0f\xec\x06\x44\xed\x42\x81\xd2\xf1\x77\xa8\xe0\xe9\x02\xef\x35\x6b\x8d\xf1\x78\xb5\xfa\xb6\x5a\x85\xb0\xb3\x6a\xe6\x9a\xa4\x42\x07\xf2\x22\xf1\xdb\x00\x7e\x91\x9d\x57\xa4\x9b\x68\x70\x96\x53\xcc\x44\xb8\x31\x93\x88\x59\xf6\x72\x04\xfe\x3a\x1f\xe2\xcb\x0d\x4d\x08\x79\x7f\x7e\xb4\x88\xc1\x7b\x3f\x1f\xf8\x45\xcf\xe5\xed\xa1\x1e\xad\x13\xfd\x70\x1e\xfb\x7c\x18\x84\x74\x5e\x74\xe0\xa8\xc7\xb0\x37\xc7\x96\x64\x1b\x2f\x52\xd0\xa3\xb0\x30\x18\x96\x5e\xa1\x2a\x2d\xcb\xc0\x15\x84\x18\x4b\x64\x07\xc3\xca\x4b\x34\x70\x6c\xb9\x1c\x16\xda\x9f\xef\x5e\x66\xfe\x96\x8f\xd0\x8b\x53\x18\xa0\x9a\x4c\x2f\x52\xe9\xb9\x86\x03\x1a\xaa\xc3\x82\x12\xcf\x27\x2a\x48\x0f\x18\x94\x48\x07\x54\x50\x1b\xee\x81\xe3\xf2\x9e\x33\x2a\x92\x33\x02\xa3\x5a\x16\x9e\xc1\xe0\x81\xd8\x67\xf4\xed\x6d\x2e\x7d\x3a\x27\xcd\x39\x17\x86\x24\x3f\xac\x67\xd9\x25\x8c\xe5\xbe\xce\x77\x2e\x12\x1f\x1c\xbc\x43\xf3\xdc\x21\x18\x66\x07\x9a\x55\x12\xd4\x1f\x35\xf0\x7a\x86\xf2\x6f\x1f\xfc\xae\x03\xd1\x37\xef\x77\xdb\xf7\x4b\x4b\xf6\xee\x6f\x66\xb7\xcc\xe7\x97\xa9\xfc\x84\xc5\x4f\x09\x4c\x83\x62\x65\x8b\xca\x77\x08\x51\x51\xf9\xbb\x75\x86\xe0\x35\x19\x8f\x34\xba\x51\x86\x42\xb8\xc3\x0c\x54\x68\x15\xee\xc9\x80\xb0\x96\x1a\x9d\x1f\xa1\xd1\x22\xe6\x6e\x3b\x2e\xca\x97\x81\xff\x49\x24\xca\x98\xc4\x95\xc3\xe3\x63\x1e\xa9\x0a\xf2\xe7\x6e\x74\x09\x52\x13\x25\xe1\xf2\x62\xd4\x85\xc3\x12\xe4\x50\xf0\x3e\x66\xbf\x3b\x3c\x5d\x7d\xba\x7a\x01\x77\x87\xa7\x11\x29\x3b\x3d\x88\x1e\x4b\x55\xc3\x4d\x4c\x6e\x47\x8d\x26\xdd\xdc\xe1\xa9\x5c\x7e\x5b\x8d\x68\xdf\xd7\xca\x2c\x5f\x7f\x4d\xd5\x44\xd5\xa0\x8d\xcf\xd4\x6c\x6a\x5d\x54\xec\xf1\x9d\x08\x06\x15\x7c\xbc\x04\x7d\xa3\x1a\xfc\x94\xfb\xbc\xd5\x35\x8f\xbb\x1c\xb0\x04\x29\x18\x44\x43\x3a\xfe\x19\x77\x46\x34\x18\xcc\x2a\x78\x1c\xbf\x4a\xfa\x4b\xd8\x33\xa5\x35\xe2\x8c\x18\x48\x6f\x2c\x9b\x69\xdf\xe3\x69\x61\xf2\x2e\xdc\x26\x51\x65\x85\x2f\xdf\x93\x48\xe6\xbf\x00\x00\x00\xff\xff\x73\x5b\xda\x47\x86\x09\x00\x00")

func blockGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockGraphql,
		"block.graphql",
	)
}

func blockGraphql() (*asset, error) {
	bytes, err := blockGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "block.graphql", size: 2438, mode: os.FileMode(0644), modTime: time.Unix(1583767808, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x81, 0xb0, 0xd1, 0x71, 0x71, 0x83, 0xac, 0x96, 0x9, 0x82, 0xd6, 0x78, 0xa3, 0xed, 0xa, 0x39, 0xa5, 0x75, 0xca, 0xb7, 0x50, 0x41, 0x5, 0x47, 0x77, 0x7c, 0x7d, 0x8c, 0xf3, 0x4e, 0x9c}}
	return a, nil
}

var _blockmetaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xcd\x4a\xc6\x30\x14\x44\xf7\xf7\x29\xa6\xd9\xbb\xd1\x5d\x77\x55\x4b\x11\x2a\xd5\x5a\x1f\x20\xda\x5b\x0d\x36\x49\x4d\x6e\x10\x91\xbe\xbb\xf4\x07\xb1\xe2\xb7\x1a\x38\x9c\x19\x46\x3e\x27\xc6\xe5\xe8\x9f\xdf\x6e\xae\x5b\x8e\x93\x77\x91\xf1\x45\x00\xa0\x94\xda\x52\x42\x62\x05\x33\x40\xe3\x69\x31\x61\x7a\x7c\xe8\x88\xc1\x27\xd7\x1f\x54\x31\x96\x73\x74\xc6\x72\x46\xc7\x8d\x3d\x5d\xb2\x39\x1e\x8d\x93\x8b\xf3\x13\x86\xe9\x73\x3c\x48\x30\xee\x25\xa3\x99\x88\x5d\xb2\xb8\x6a\x6e\xef\x8a\xb6\xe8\x9a\x76\xbd\xa6\xaa\xc0\x5a\x38\x9c\xc9\xab\x76\xf0\x01\xfc\x9e\xf4\x08\xf1\xcb\x42\xd5\x95\xf4\xd7\xd9\xf8\x8a\x6b\x8e\xf1\xdf\x5e\xbd\xf7\x7e\x84\x0d\xae\xac\xfc\xe5\x95\xf7\x34\xd3\x77\x00\x00\x00\xff\xff\x98\x77\x32\x21\x36\x01\x00\x00")

func blockmetaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_blockmetaGraphql,
		"blockmeta.graphql",
	)
}

func blockmetaGraphql() (*asset, error) {
	bytes, err := blockmetaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "blockmeta.graphql", size: 310, mode: os.FileMode(0644), modTime: time.Unix(1570767117, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcc, 0x45, 0x31, 0x46, 0xf8, 0x7d, 0xcb, 0x52, 0xca, 0x83, 0x12, 0x95, 0xd6, 0xb8, 0x4a, 0xf0, 0xdb, 0xdb, 0x1f, 0xa8, 0x42, 0x61, 0x8d, 0xa7, 0x30, 0xaa, 0x48, 0xa7, 0xd8, 0x5e, 0x68, 0x32}}
	return a, nil
}

var _queryGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4f\x6f\x1b\xb7\x13\xbd\xfb\x53\xcc\xcf\xbf\x8b\x13\x28\x82\xec\x26\x39\x08\xf0\x41\xb2\x5d\xc4\xa8\x6d\xb5\xb2\xda\x02\x39\xed\x88\x9c\xdd\x25\xc2\x1d\x6e\xf8\x47\xea\xa6\xe8\x77\x2f\x48\xae\xa4\x75\x60\x17\x45\x9b\x22\x2d\xe0\x5c\x76\xb5\x24\x67\xde\xcc\x7b\xf3\x18\xfb\xae\x25\xf8\x21\x90\xed\xe0\xd7\x23\x00\x80\xe3\xe3\xe3\xf4\xbc\x27\xb4\xa2\x06\x5f\x13\xac\xb5\x11\x1f\x44\x8d\x8a\xa1\x34\x76\x8b\x56\xc6\x27\x78\x8b\xec\x50\x78\x65\x18\x5e\xd2\x2f\x24\x42\x7a\xf5\x16\x05\xb9\x97\xb0\x46\x47\x12\x0c\x43\xf1\x31\x86\x2f\xc6\x47\x29\xee\xcf\x35\x71\x8a\x6a\xc9\x07\xcb\x24\xa1\x10\xc1\x3a\x63\x0b\x50\x0e\xa8\x69\x7d\x37\x02\xe5\xa1\x21\x64\x07\x9d\x09\x50\xe3\x26\xee\x46\x51\x93\x4c\x27\x89\x25\x98\x32\xbd\xba\x96\x84\x2a\x15\xc9\x0c\x32\x65\xb0\xc8\x15\xed\xb2\xcd\x96\x77\x53\x40\xbd\xc5\xce\x81\x30\xec\x94\x24\x9b\x4e\x16\x81\xa5\x29\xa0\x54\xa4\x25\x0c\x2a\x73\xa9\x6e\x72\x23\xd8\xd6\x4a\xd4\xe0\x54\xc5\xa8\xc1\xd7\xe8\xd3\xb9\x06\xbd\xa8\x15\x57\x40\x9a\x1a\x62\x9f\xd2\x6c\xd1\xa5\x18\x28\x3c\x2c\xaf\x6e\x17\x3f\x5d\x5d\x42\x69\x4d\x93\x4e\xe4\xce\xad\x49\x60\x70\x14\x81\x27\xa8\x0e\x2c\x19\x5b\x21\xab\x4f\x18\xfb\xd6\x03\xbe\x27\x02\xd4\xce\xe4\xea\xbc\x25\x6c\x62\xb2\x0d\x59\x17\x9b\x1b\x38\xe2\x2f\xee\xc3\xda\x09\xab\xda\x78\xb0\x78\x40\x5b\x86\xbf\x3a\x50\xe3\xbe\xcd\x85\x9d\xa4\xe5\xb4\x55\x96\x11\x48\x4f\x70\xe6\xfe\x06\xb9\x0a\x58\xa5\x94\x8a\xab\xe3\xfd\xe6\xc4\xdd\x14\xee\xd3\xe7\xff\x1d\x1d\x82\xdc\x98\x2d\xd9\x5c\x0a\x70\x68\x60\x6d\x02\x4b\xb4\x91\x3c\x16\x3a\x38\xb5\x21\xdd\x8d\x61\x06\x4c\x15\x7a\xb5\x21\xd8\xa0\x0e\xd4\xf3\x8a\xfd\x49\x4b\x3a\x2f\xfa\x5c\x71\x4d\x28\xc1\x58\xd0\xe8\x3c\x28\x6b\x29\x15\xbe\xd6\xbd\x08\xe1\x44\x52\x4b\x2c\x63\x4b\xa2\xb2\x86\x3b\x16\xac\xbb\xe2\xc5\xf8\x00\x5d\x9b\xed\x3c\x1e\xba\x0b\xcd\x14\xae\xd9\xbf\x7d\x3d\x80\xff\x4e\x55\xf5\x9f\xc3\xff\x89\xac\x89\x90\xbe\x5a\x1d\xb5\xaa\xea\xa7\x0b\x59\xb4\xf8\x31\x10\x48\xf4\x08\xad\x22\x41\x59\xaa\x71\x70\x04\x32\xb4\xe8\x1c\xac\x51\x7c\x88\xc8\x84\x61\xaf\x38\x50\x5c\xb5\xbd\x54\x40\x95\x71\xdc\x62\x7a\x90\xca\x09\xc3\x4c\xc2\x93\x1c\xc3\x92\xbc\x55\xb4\xa1\xb8\xbc\x17\xf3\x7e\x58\xf7\x83\x93\x67\xd9\xb5\x86\x1d\xb9\x3c\x97\xca\x81\x40\xad\xc7\x70\xed\xe3\x50\x3b\x2c\x53\x63\xa2\xea\x92\xac\xb1\x21\xc8\x71\x62\x80\xf9\x62\xf5\x0e\xa4\xb2\x94\xf5\x0a\x27\xbb\x51\x44\x96\x09\x7a\xfc\x31\x6c\x48\x3e\xba\x13\xe5\x50\x93\xaa\x51\x79\x4a\x39\x34\x6b\xb2\x11\x8d\x25\x17\xb4\x77\xd0\x92\x85\x36\x2a\x7c\xf0\xed\x44\x52\x89\xe9\xcd\x1b\x38\x9d\x4c\x1e\xa8\x27\xc6\xea\xdb\x0d\xe7\x71\x75\x90\x28\x9b\x98\x0d\x34\x02\xc3\xba\xeb\x07\x35\xf7\x79\x17\xdc\x70\xe2\x82\xba\xcc\x41\x44\x75\xa0\x59\x69\xe5\xbb\xbd\xe6\xc6\xb0\xf0\x35\xd9\xad\x72\x34\x02\xd4\xda\x6c\xa1\xa4\xde\x66\x76\xe1\x42\xfb\x40\x5b\x49\x46\x03\xb8\x9f\x2b\x68\x0a\x73\x63\x34\x21\xc3\x39\x94\xa8\x1d\xa5\x9d\x2f\xa6\xfd\xd8\x3f\x62\x10\xcb\x9e\xc3\x7e\xc8\xff\xf8\x1e\xd8\xd1\xf2\x9f\xb9\x08\xbe\xbc\xaf\xce\xfb\x16\x7c\x35\x63\xcd\x3e\x64\x4a\x98\xf4\x3d\x4a\x1c\x51\xa5\x98\x93\xaf\x94\x87\xdb\xe7\xd9\x87\x9f\x7d\xf8\xd9\x87\xff\xe5\x3e\xbc\x33\x94\xcf\x8c\xf8\xff\xf0\xea\x2f\xfd\xeb\x0f\xcf\x6f\x16\x17\xdf\xc1\xed\xd5\x6a\xf6\xf7\xa3\xed\xcc\x70\x99\x1c\xfb\x70\x27\xc0\xf5\x25\x94\xb1\x87\x80\x36\x3d\xe2\x4a\xa5\x36\xc4\x50\x78\xd5\x50\x31\x3a\x5c\x02\x59\xbc\xa6\x69\xd1\xa2\x8f\x02\x6e\xad\xd9\x28\x49\x72\xfc\x20\x45\x8a\x7b\x7d\x39\xef\x56\xaa\xa1\x81\xc5\xc6\x9f\xce\x63\xd3\xa6\x9b\x27\xc7\x51\xce\xf0\xa8\xff\x3f\x7c\x83\x1e\xce\x26\x93\xb7\xaf\x26\xa7\xaf\x26\x67\xab\xd3\x37\xd3\xc9\xeb\xe9\xe4\xcd\xfb\x68\x02\x8f\x7c\x1f\x9f\x9e\x7d\xf3\xfe\xc0\x5e\x04\x3b\x85\x98\x63\xe8\xc8\x03\xc5\xef\x71\x4f\xe1\x62\x71\xfb\xfd\x6c\x39\x5b\x2d\x96\x70\x0e\x37\xab\xab\x1d\xb1\xf3\x8c\xfc\xcb\xb2\x38\xbb\xb8\x58\xfc\x78\xb7\xfa\xa7\x79\xbc\xcb\xe3\xba\xad\xc9\xee\x09\x44\x21\x4c\x60\x5f\xa4\x3f\x72\x84\x25\xf4\x4f\x70\x35\xf3\xb3\xbc\xf5\x22\x6e\x52\x86\x4f\x1e\x6b\x61\x1f\xee\x70\xf3\x3d\xd5\xb6\xdf\x8e\x7e\x0f\x00\x00\xff\xff\xd6\x89\x1a\x9c\x9c\x0e\x00\x00")

func queryGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_queryGraphql,
		"query.graphql",
	)
}

func queryGraphql() (*asset, error) {
	bytes, err := queryGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query.graphql", size: 3740, mode: os.FileMode(0644), modTime: time.Unix(1584037750, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0x24, 0x6d, 0x57, 0x25, 0x6b, 0xc9, 0xed, 0x55, 0xa8, 0x71, 0xf3, 0x11, 0xd4, 0x25, 0xe4, 0xdd, 0xdc, 0x25, 0x6b, 0xac, 0xb, 0x60, 0x47, 0x74, 0x76, 0x4, 0x85, 0x51, 0xf1, 0x83, 0xe9}}
	return a, nil
}

var _query_alphaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\x41\x4f\xe3\x3a\x10\xbe\xe7\x57\x4c\x73\x78\xaf\x48\xa8\x87\xf7\x6e\x95\x38\x84\x26\x2c\x15\xa5\x61\x9b\x70\x58\xad\x50\xe5\x24\xd3\xc6\xc2\xb1\x2b\xdb\x59\x36\x5a\xf1\xdf\x57\x71\xe2\x34\xe9\x16\x16\x24\x90\x10\x3d\x35\xb6\xe7\x9b\x6f\xc6\xf3\xcd\x58\x57\x3b\x84\xaf\x25\xca\x0a\x7e\x39\x00\x00\xae\xeb\x7a\x8b\x9b\x4b\x0f\xbe\xa0\x06\x02\x8a\xf2\x2d\x43\x48\x98\x48\xef\x21\xa9\x80\x6a\x05\x73\x1f\x84\x34\xff\x78\x59\x24\x28\x27\xf0\x4d\x94\x90\x12\xce\x85\x06\xb5\xc3\x94\x6e\x2a\x48\x84\xce\x27\xae\xeb\x1a\x50\x63\x3e\x36\x7f\xeb\x1f\xcd\xa6\x10\x69\x49\xf9\xf6\xb4\x5b\xe3\x65\x31\x85\x5b\xca\xf5\xff\xff\x99\xb5\x93\x29\x9c\xd7\x56\xce\x31\x56\x8c\x2a\x0d\x62\x03\xa9\xe0\x5a\x92\x54\x83\x16\xf7\xc8\x95\x75\xd7\x7c\xed\xfd\xb9\xae\xbb\x68\x2d\xcc\x16\xa8\xaa\x48\x04\x53\x30\x0e\xc2\xe8\x04\xb4\x80\x0d\x65\x1a\x25\xe8\x1c\x41\xa2\x2a\x99\x56\x40\xb6\x84\x72\xa5\x2d\x66\x87\x1b\x35\xb6\x53\xf8\xde\x84\x30\xba\x73\x9e\x76\x64\x09\x2a\x18\xa3\x50\x54\x4c\xcc\xf2\x6b\x5d\xce\x2c\xca\x53\x4e\x67\xa5\x54\x42\x42\xa9\x30\x83\x8d\x90\xb0\x23\x5b\xca\x89\xa6\x82\xf7\xb1\x52\x73\xca\xa6\x7e\x00\x70\x4d\x7e\xd2\xa2\x2c\xda\x0b\xad\xf9\x5b\x4e\x5a\x00\xe5\x29\x2b\x33\x04\xca\x81\xb4\xeb\x7d\x58\x46\x0b\xaa\xbb\xbb\xeb\xa3\xc6\x26\x07\x44\x6b\x49\x93\x52\x63\xc3\x4f\x0b\x50\x42\xea\x7e\xe0\x7d\xb4\x7a\xef\x82\x22\xcb\xa6\x10\x87\x57\xc1\x32\x5a\x47\xe1\x2a\x5e\x5f\xcc\x83\x85\x0f\x67\x70\x19\x2e\xfc\x60\x15\x0d\xdc\xf8\x54\x62\x5a\x07\x5b\x33\x7c\xc8\x69\x9a\xbf\xc4\x49\x28\x33\xac\x93\x51\xa3\x87\x2b\x3f\x58\xc1\x19\xf8\x41\x34\xb3\xd5\x17\xb7\x99\xe7\x0d\xf6\xe8\xd9\x42\x6c\x6e\x3b\x21\x8c\xf0\x14\x95\xb9\x03\xd2\x4a\x81\xa6\x40\xd2\x54\x94\xbc\x4b\x5a\xfb\x79\xde\x9e\x1e\xd4\x69\x9c\xa3\xdd\x87\x87\x5c\x28\xdc\x83\x56\xa2\x04\x22\xeb\x78\xb4\xa4\xf8\x03\x29\xdf\xf6\x63\x6a\xad\xec\xf5\x8e\xde\xb6\x40\x3e\xb7\x7e\x3e\x64\xf9\x7b\xb3\x59\x78\xbb\x8c\xd7\xe7\xde\xc2\x5b\xce\x82\x03\x21\x78\xd7\xf5\xe6\x7b\xea\xa0\x3b\x25\x76\x35\x68\x9d\xbc\x03\x4a\xeb\xf0\x26\x9e\x87\xcb\xd1\x9d\xd5\x8c\x37\xa8\xec\xb7\x11\x4f\xd7\xe3\xff\x69\xcb\x6e\xd0\xe5\x9f\x14\x91\xd9\xfd\x57\xed\xcd\x0f\xe4\x73\xa0\x1e\x7b\xec\xb8\x7c\xfa\x80\x0d\x89\xbf\xc0\x35\x87\x8e\x83\x0d\x2b\x3c\x17\x2c\x43\xa9\x5e\x59\xd1\x97\x8d\xd5\xdb\xce\x83\x0f\xaf\x08\x33\x10\x3e\x87\x1e\x1e\x1d\x07\x79\x59\xf4\xdd\x34\xef\x2f\xaf\x9d\x40\xc6\xa5\x3d\xf5\xe7\x24\xec\x1e\x6b\x26\x9c\xa4\x1a\x34\x66\x18\xd3\x09\x4e\xc0\x34\x67\xc2\x76\x39\xe1\x65\x81\x92\xa6\x84\xb1\xca\x86\x6b\x84\x78\x08\xb2\xbf\xed\xe6\x09\x65\xab\xd3\x1a\xd9\xe9\xfb\xe8\xb4\xc4\x9e\xeb\x51\xef\x43\x91\x14\x66\x36\xf6\x28\x22\xcb\x3a\x8b\xa6\x08\x06\x69\x7b\x19\x37\x3b\x73\x39\x29\xf0\xfd\x08\x1d\xaf\x97\x3d\x1b\x2b\x2c\x14\x0a\x94\x26\xf7\x98\x59\x78\xda\x35\xc8\x53\xd0\x39\x55\xf5\x73\x1b\xc8\x66\x83\xa9\x06\x51\x57\x6c\xaf\x01\x05\x61\xb4\x9e\x2f\x67\x8b\x5b\x3f\x58\x47\xb1\x77\x15\xf8\xce\xa3\xf3\x3b\x00\x00\xff\xff\xa2\x55\x8e\xc9\xe9\x0b\x00\x00")

func query_alphaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_query_alphaGraphql,
		"query_alpha.graphql",
	)
}

func query_alphaGraphql() (*asset, error) {
	bytes, err := query_alphaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "query_alpha.graphql", size: 3049, mode: os.FileMode(0644), modTime: time.Unix(1584037750, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x85, 0x14, 0xc6, 0xdf, 0x64, 0xbe, 0xd7, 0x52, 0x1d, 0x62, 0x7c, 0xa1, 0x17, 0xab, 0xa8, 0x67, 0xaf, 0x9f, 0x48, 0xb7, 0x95, 0x31, 0xac, 0xef, 0x36, 0xf0, 0x9f, 0x5b, 0x78, 0x4f, 0x37}}
	return a, nil
}

var _schemaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4e\xce\x48\xcd\x4d\x54\xa8\xe6\x52\x50\x50\x50\x28\x2c\x4d\x2d\xaa\xb4\x52\x08\x04\x51\x60\x81\xe2\xd2\xa4\xe2\xe4\xa2\xcc\x82\x92\xcc\xfc\x3c\x2b\x85\x60\x24\x1e\x57\x2d\x17\x20\x00\x00\xff\xff\x52\xd9\x58\xe5\x3b\x00\x00\x00")

func schemaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_schemaGraphql,
		"schema.graphql",
	)
}

func schemaGraphql() (*asset, error) {
	bytes, err := schemaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema.graphql", size: 59, mode: os.FileMode(0644), modTime: time.Unix(1584037750, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5b, 0xba, 0x8f, 0x74, 0x29, 0x4e, 0xaf, 0x41, 0x66, 0x2b, 0x4e, 0x31, 0x85, 0x84, 0x19, 0x59, 0x50, 0x81, 0xda, 0x72, 0x50, 0x56, 0xaf, 0xe3, 0xd8, 0xb7, 0x35, 0xbc, 0xd1, 0x85, 0xf3, 0xc6}}
	return a, nil
}

var _search_transactionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcb\x6e\xe4\x36\x10\xbc\xf3\x2b\xda\xe3\x8b\xbd\x70\x74\x48\x6e\x73\x1b\x6f\x9c\xc4\xc0\x62\x8c\xd8\xde\x2c\x82\x20\x80\x5a\x64\x6b\x48\x98\x22\xb5\x7c\x8c\x22\x04\xf9\xf7\xa0\x29\x8d\xe7\x61\x3b\x87\x5c\x92\x05\xf6\x26\x88\xfd\x28\x56\x57\x17\xcf\xc5\x39\xc0\x3d\xc5\xde\xbb\x48\x11\x5a\x1f\xe0\xe7\x4c\x61\x14\xe7\x42\xa4\xb1\x27\x78\x20\x0c\x52\x3f\x06\x74\x11\x65\x32\xde\xc5\x1f\x7c\x18\x30\xa8\x5d\x12\xfc\x29\x16\x8f\xda\x44\x30\x11\x10\xa4\x46\xe3\xbe\x19\x8c\x22\x90\x39\x44\x1f\xae\xc0\x38\x65\x24\x26\xe3\x36\x90\x34\x41\x1f\xfc\x26\x50\x8c\xe0\x5b\x40\x88\xa5\x7c\x05\xbf\xfa\x0c\x12\x1d\xf4\x18\x23\x98\x04\x0d\xca\x27\x48\xbe\x64\x28\xd3\xb6\x14\xc8\xa5\x39\x1a\x3a\x4a\xda\xab\xc8\xe7\xd2\xbb\x64\x5c\x26\x68\x29\x49\xcd\x3d\x3a\x1f\x08\x02\xc5\x6c\x53\xe4\xe6\xf0\x8e\x4c\xd2\x14\x40\x99\x40\xd3\x0d\xde\xc1\x05\x6d\xc9\xf1\x21\xd7\x0f\xb4\xa5\x10\x69\x1f\x70\x59\xc1\x0a\x6a\x97\xad\xad\xe7\x5b\x40\x47\xe8\x62\x89\x26\xa7\x18\x7a\x40\xb7\x21\xd0\x18\xa1\x21\x72\x10\x08\xa5\x26\x55\x2d\xc4\x94\xb0\x84\x87\x14\x8c\xdb\x08\x31\x43\x59\xc2\x6f\x2f\xa8\x3c\x61\xf2\xec\x77\xf1\xd7\x9b\xac\x5f\xa3\x7c\x3a\xa1\xfd\xb8\xd3\xd9\x3f\xb6\x3a\x4d\x9f\x7a\x09\xc1\xf3\x7f\x65\xfc\x80\x4e\xc1\x43\x6e\xa2\x0c\xa6\x2f\xfd\x59\x10\x8b\xc5\x42\xac\x20\x1a\xb7\xb1\x04\x69\x5f\x9c\xbf\x65\x21\xbd\xd4\xb9\x82\x0e\xe7\x61\x20\x97\xe4\xbe\xbb\xd1\x7d\xe6\xea\x95\x10\x9f\x56\xf7\xeb\xdb\xf5\x8f\x4b\x50\x1e\xd6\x77\x8f\x1c\xb6\xa1\xc4\x13\x35\x4e\xda\xac\xa8\x70\x5d\x67\xa7\x7c\x0d\xad\x21\xab\xf8\x4c\x51\xa2\xd0\x19\x47\x60\xda\x12\xd0\x51\x8c\xb8\xa1\xa2\x3d\x99\x32\x5a\x3b\x02\xc2\xfd\xcd\x2f\x37\xf7\x0f\xab\x0f\x3c\x27\x8e\x3a\x80\x5a\x09\xb1\xbe\x7b\xbc\x59\x02\xda\x01\xc7\x08\x52\x13\x0b\x4d\x13\x6c\xd1\x66\xe2\x8c\xba\xdc\xa6\x8a\x09\x53\x8e\x35\xb7\xed\xf0\x89\x20\xe6\x40\xac\x4c\x13\xa1\xa6\x3f\x48\xe6\x44\xaa\x66\x1c\xa3\xcf\x30\xa0\x4b\xc7\x91\x78\x44\x50\x87\xaa\x24\xcf\x8a\x2e\x5b\x52\x4d\x84\xbe\x3e\xef\x57\x96\x6c\xb1\xf8\xa4\xa9\x28\x39\xf1\xba\xed\xd8\x2e\x77\x77\xf0\x71\xfd\xfd\x1d\xf8\x9e\x02\x96\x86\x65\xb9\xfa\x40\x5b\xe3\x73\xb4\x23\x44\x5e\x9f\x5d\x4a\x25\xc4\xad\x7b\x31\x9b\xab\x03\xf4\x63\x59\xc7\x24\xf5\xd4\x8b\xd5\x30\x13\xb6\xa5\x60\xda\x11\x4c\x8a\x13\x63\x55\x05\x58\x36\xd1\xf9\x04\xca\xe7\xc6\x12\xf8\x00\x29\x98\xde\x12\x48\x9f\x99\x98\x03\x1d\x57\xe5\xd2\x3c\xd7\x25\x5c\x7b\x6f\x09\xdd\x59\x21\xe2\xfd\x4b\xe7\x40\x6b\xfd\xc0\x32\x62\x38\x87\xcb\x5e\x54\xc4\x07\x83\x26\xc7\xbf\xdd\xb4\xb8\xcc\x85\x71\x89\x42\xc8\x7d\x22\xc5\x9d\x5e\x2c\xc9\x11\x8f\x04\x8d\xf5\xf2\x09\x02\xf5\x81\x98\x23\x52\xa0\x29\x14\x52\x4d\x98\x8c\xc1\x34\x96\xb8\x92\x89\xb7\x07\x7f\x4e\xd0\x3f\x6a\x02\x8b\x31\xc1\x93\xf3\x83\x3b\xca\x9d\x5b\x14\xa8\x7d\xf0\x92\x62\x9c\xbc\xd0\xc4\x23\x65\x02\x14\x1b\x75\xb9\x6b\x28\x14\x33\x6c\x08\xe8\x73\x46\xfb\x2c\x9b\x1c\x8a\x0d\x4e\x05\x5d\xee\xe0\x22\x3b\x45\x61\x27\xd9\xf2\xbf\x72\xb9\xab\x2f\x8b\xf3\x0d\xda\x48\x0d\x12\x79\x25\xeb\x63\xf8\x35\x94\xee\x99\x2a\x80\xdb\x43\x1b\x2c\x88\x23\x6d\x3a\x6e\x34\xef\x4f\x91\xeb\xd5\x84\x78\x86\x37\x18\x6b\x19\x9f\x0a\xa6\x2d\xd6\x8e\x03\x8e\xd0\x8c\x25\x7e\x8e\xf1\xed\x84\x34\x42\xa4\x1e\xc3\xf4\x04\x68\x42\x35\x5f\x80\x55\xf5\xe1\xf6\xba\x2a\xe4\x1e\x60\xbb\xe6\xd3\x75\xee\x96\xf0\xd1\xb8\xf4\xdd\xb7\x67\x42\x94\x84\x25\x94\x93\x9f\x08\x15\x85\x33\x21\x00\x00\x98\x7a\xbe\x7b\x79\x4e\xa6\xb5\x9c\xe5\x7f\xb2\xf8\x45\x3c\x68\x5c\x79\x22\x9e\xed\x69\xa7\x49\xf1\xbe\xf8\x40\xbd\x3b\x59\x4d\x07\x35\x34\x64\xfd\xc0\xfc\x5b\xd3\xf1\xfe\xea\xbd\xcd\xf1\x5f\xef\xd8\x70\xa6\xe0\x7d\xd9\xd1\xe7\x70\x6c\x78\xb0\xb2\x49\xfb\xbc\xd1\x45\xd4\xcf\x19\x6d\xf0\xdd\x29\xd0\x08\xc8\xf6\xb1\x45\x63\x91\x67\x71\x11\x89\xf6\x8e\xb3\x03\x76\x39\xed\x51\x99\xfb\x12\x0e\x8c\xa3\xb0\xc1\xde\xfe\x6f\xcc\xba\x99\x5f\x89\x53\xb7\xfe\xff\x58\xe6\xdb\x8e\xf9\xca\x03\xf9\x65\xbb\xca\x57\x5b\xf9\x6f\x6c\xe5\xab\xa5\xbc\x61\x29\x7f\x07\x00\x00\xff\xff\xb4\x8d\x8a\xd9\x2c\x0c\x00\x00")

func search_transactionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_search_transactionGraphql,
		"search_transaction.graphql",
	)
}

func search_transactionGraphql() (*asset, error) {
	bytes, err := search_transactionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "search_transaction.graphql", size: 3116, mode: os.FileMode(0644), modTime: time.Unix(1570767117, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x88, 0x44, 0x2b, 0xac, 0xef, 0xe5, 0x4f, 0xa2, 0x32, 0xfa, 0xca, 0x83, 0x9e, 0xa8, 0x1, 0xc8, 0x68, 0x3c, 0xa4, 0xd3, 0xdc, 0xc0, 0x35, 0x82, 0x1, 0x86, 0xb9, 0xb4, 0x8b, 0x66, 0x84, 0x8c}}
	return a, nil
}

var _subscriptionGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x4d\x6f\xdb\x46\x10\xbd\xe7\x57\xbc\xea\xe4\x04\x8a\x90\x7e\xa0\x07\x01\x39\xd8\xa8\x8b\x18\x48\x2c\xd4\x76\x9b\x2b\x47\xcb\xa1\xb8\xf0\x72\x56\xde\x0f\xb1\x4a\xd1\xff\x5e\xcc\x92\x92\x68\xb7\x6e\xd1\x53\x72\xc8\x49\x14\xb9\x33\xf3\xe6\xed\x9b\x37\x69\xbf\x65\xdc\xe6\x75\x34\xc1\x6e\x93\xf5\x82\x3f\x5e\x00\xc0\x6c\x36\x2b\xbf\xb7\x4c\xc1\xb4\x48\x2d\x63\xed\xbc\xb9\x37\x2d\x59\x41\xe3\x43\x4f\xa1\xd6\x5f\xa4\x40\x12\xc9\x94\xd8\x57\xfc\x3b\x9b\x5c\x1e\x53\x20\xc3\xf1\x15\xd6\x14\xb9\x86\x17\x54\x0f\x99\xc3\xbe\x5a\xbc\x28\x79\x3f\x9e\xdf\x5c\x2f\x41\xae\xa7\x7d\x84\xf1\x12\x6d\xcd\xa1\x94\xa9\xb2\xd4\xbe\x42\x63\xd9\xd5\x98\xd4\x8a\x05\x09\xc7\x39\xfa\xd6\x9a\x16\xd1\x6e\x84\x1c\x52\x4b\xa9\xc4\x75\x94\x4c\x6b\x65\x03\x76\xdc\xb1\xa4\x52\xa6\xa7\x58\x72\x90\x49\xb8\xb9\xfc\xb0\xfa\xed\xf2\x27\x34\xc1\x77\x25\x62\xe8\x65\xcd\x86\x72\x64\xf8\x66\xe8\x30\x22\xb0\x0f\x1b\x12\xfb\x89\xb4\x93\xc5\x23\x3e\x06\x14\x77\xa7\x9e\xe3\xcf\x03\xbe\xb3\xf2\xb9\x1c\xad\x1b\xcd\x37\x32\xf7\x8b\x76\x8d\xf7\x24\x9b\x4c\x1b\x46\x4c\xc1\xca\x66\x76\x3c\x5c\x48\x59\xe2\xb6\xbc\xfe\xe6\xc5\x29\xc9\x7b\xdf\x73\x18\x10\x41\x72\x87\xb5\xcf\x52\x53\xd8\xcf\x61\xc5\xb8\x1c\xed\x8e\xdd\x7e\x81\x73\x08\x6f\x28\xd9\x1d\x63\x47\x2e\x33\x3a\x26\x89\xa0\x31\x32\xb0\x1b\x3e\x26\x5f\x5a\x6e\x99\x6a\xf8\x00\x47\x31\xc1\x86\xc0\x3b\x0e\xd1\xae\xdd\x78\xbb\x38\xab\x79\xcb\x52\x2b\x8d\x7a\x65\xd3\x13\x2b\x71\xfb\xea\xe5\xe2\x04\xdd\xf9\xfe\x42\x83\xae\x73\xb7\xc4\x95\xa4\x1f\x7f\x98\xc0\x7f\x67\x37\xed\x17\x89\x1f\xe7\xa8\x24\x3b\x57\x3d\xaa\x27\x1e\xed\x80\xd8\xd9\xce\xa6\x38\xd7\x6a\x81\x1b\x1f\x78\xbc\x72\x4d\x69\x65\x84\xd1\xe4\x94\x43\x91\xcc\x51\x47\x13\x62\x34\xd3\xf3\xcc\xac\xb6\xf4\x90\x19\x35\x25\xc2\xd6\xb2\xe1\x41\xc2\x7b\x9f\x61\x48\xb0\xa5\x18\xb1\x26\x73\xaf\x2d\x1b\x2f\xc9\x4a\x66\xfd\x1a\x46\x20\xb0\x0d\x6c\x82\xf6\x85\xda\x46\xe3\x45\xd8\x24\xae\x17\xb8\xe1\x14\x2c\xef\x58\x3f\x1f\x45\x5e\x99\x1c\xa2\x0f\x93\x81\xd2\xb7\x81\xe3\xd6\x4b\xe4\x38\xf4\x60\x23\x0c\x39\xb7\xc0\x55\x82\x8d\x88\xd4\x14\xc6\x55\xc6\x7a\x3a\x52\xc7\x18\xf2\x68\x82\x8b\xd5\xdd\x3b\xd4\x36\xf0\x30\x00\x38\x3b\x8c\x28\x49\x5d\xa0\xeb\x9f\xa9\x52\x86\xd0\x83\xca\xa7\x22\x57\xb2\x4b\x09\xc9\xdd\x9a\x83\xa2\x09\x1c\xb3\x4b\x51\x27\x85\xa9\xe3\x21\xe3\x54\x76\x1a\x33\xd2\x8a\xb7\x78\x33\x49\xf7\xb1\x65\x35\x9e\xcc\x73\x78\x71\xfb\x31\xc5\xc0\xe6\x21\xad\x97\xc2\x38\xef\x07\xa6\xb5\xf6\x49\x25\xd6\xd9\xb4\x3f\x4a\x75\x81\x95\xaa\xa0\xb7\x91\xe7\x20\xe7\x7c\x8f\x86\x47\x93\x39\xa4\xcb\xdb\x47\xd2\x2c\x2a\x9c\x80\x7d\x2a\xc0\x25\x2e\xbc\x77\x4c\x82\xb7\x68\xc8\x45\x9e\xa0\x9f\xcd\xae\x1a\x88\x97\xd7\x9f\x38\x78\x1d\x93\xda\x1a\x4a\x1c\x8b\x34\x7a\x92\xa4\x95\x3a\x0a\xf7\xc3\x9d\x0c\xbd\xf5\xda\x72\x60\x1a\x50\x39\x1d\x95\xc1\xc5\x54\xe8\x7a\x98\x83\xde\x28\x1d\x6f\x1c\xbd\x4d\x2d\x08\x55\x31\xe8\x0a\xfc\x90\xd5\x45\xfd\x38\x15\x07\x77\xed\xad\x73\x58\xab\xf8\x25\x81\x12\xb4\x02\x2a\xcd\xff\xa1\x24\xbd\x92\xc4\x61\x47\xae\x3a\x96\xbb\xd3\xb9\xb0\x21\xa6\x63\xea\xe4\x35\xc3\x93\x02\x2a\x20\x3a\xa0\x7f\xdc\x23\x05\x86\xf8\x1e\xdb\xe0\x0d\xc7\xf8\xb4\xa1\x13\x55\x5a\x6a\x98\x5e\x5d\x40\xff\x88\xaa\xf4\x7c\x12\xd5\x21\xc5\x84\xec\x89\xa0\x9e\x86\x2f\xf1\xab\x95\xf4\xfd\x77\x27\x79\xbd\x5c\x8e\x7e\x3e\x71\xfe\xd1\xf8\x6f\x46\x62\x47\xf3\xfe\xf7\xc5\x79\x98\x8e\xbf\x6d\xce\xa7\x8b\xf3\xb9\xbd\x79\xbd\xba\xbb\x5c\x16\x02\x1e\xef\x49\xb5\xb0\xa4\x03\x5b\x46\xfc\x50\x26\x8e\x9e\xf1\x5f\x3b\xec\x62\x3c\xff\x99\x96\x98\xb6\x43\xeb\xc8\x3a\x9a\xbe\x01\x0d\x97\x3b\x57\xa3\x1f\x9f\xf5\xf5\x9b\xd1\xab\x0b\xa5\xbc\xb1\x22\xc5\xe6\xa7\x1e\xfc\x75\x1d\xfe\x4f\xfc\x73\xbc\xfe\x16\x6b\xd6\x03\xcf\x7a\xd8\xd7\x75\xf6\x05\xaf\xb3\x42\x76\x4b\x3b\x2e\x4c\x73\xfd\xf9\x17\xda\x73\x76\x79\xf0\x98\x89\x5f\xfe\xf9\x57\x00\x00\x00\xff\xff\x93\x1e\x2f\x48\x7e\x0c\x00\x00")

func subscriptionGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_subscriptionGraphql,
		"subscription.graphql",
	)
}

func subscriptionGraphql() (*asset, error) {
	bytes, err := subscriptionGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "subscription.graphql", size: 3198, mode: os.FileMode(0644), modTime: time.Unix(1584037750, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2e, 0x9c, 0xd0, 0x11, 0xad, 0x7e, 0x39, 0x73, 0x29, 0xea, 0xdc, 0x5c, 0xba, 0xc9, 0xe, 0x27, 0x79, 0x62, 0x51, 0x0, 0x35, 0xd4, 0x91, 0xe9, 0xb5, 0xfc, 0x76, 0xc5, 0xb7, 0x52, 0xab, 0xf1}}
	return a, nil
}

var _tokenmetaGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\xd4\x43\x5a\xa0\x95\xd1\x7c\xd8\xae\x80\x1e\xd6\xdb\x6d\x61\xa0\x71\x02\xef\xf6\x54\x14\x0d\x97\x9c\x5d\xb1\x96\x38\x0a\x39\xf2\x07\x0a\xff\xf7\x82\xa4\x28\xed\x6a\xd7\x68\x72\x48\xe2\x83\x21\xce\xce\xbc\x79\xf3\xf8\x38\x79\x9e\xaf\x2a\x84\x39\x19\x83\x92\x35\x19\xe0\x87\x16\x61\x43\x16\x04\xac\xe8\x06\x4d\x9e\xe7\x59\x88\x85\xd3\x4e\xe2\xbf\x19\x00\x40\x9e\xe7\xef\xd7\x35\xc9\x9b\xf7\xa0\x1d\x70\x85\x10\x4e\x20\x18\xee\x2a\x2d\xab\x10\x62\x5f\x0a\x4a\xb0\xf0\x49\xb7\xa2\xd6\xca\xc3\xfa\xfa\x90\x7d\x8d\x9b\x12\x2e\xfa\xaf\x2c\xe1\xce\xa0\xd6\x8e\x81\x36\x80\x6a\x8b\x0e\x98\x22\x90\x4b\xb5\x21\x5c\xc2\x9f\x81\xd9\x42\x6d\xf1\xaf\x67\x43\xf1\xa5\xd9\x90\x6d\x44\x1c\x89\x40\x68\x05\xad\xd8\x6a\x13\x22\x09\xa0\x15\x5b\xf4\x89\x25\xbc\xeb\xbf\xb2\xc7\x2c\x0b\xad\x9d\x36\xdb\xba\x1f\x1a\x2c\xba\x96\x8c\xc3\x62\x5f\x0c\xdf\x72\x94\x61\x89\x08\x15\x73\xeb\xca\x93\x13\x45\xd2\x15\x6a\xd3\x39\x2c\x34\x9d\x6c\x3b\xad\xd0\x9d\x48\xb2\xf8\x83\x24\x23\xb1\x65\x77\x22\x3b\xeb\xc8\x0e\xb3\xc4\x63\x09\x4b\xb6\xda\x6c\xc7\x39\xfc\xed\x44\x12\xb4\xfe\x07\x25\x17\xa9\xc0\x90\xc2\x32\xfe\xf4\x6c\xca\x3a\x48\x79\x84\x75\x92\x78\x97\xf4\x87\x0e\x0d\x6b\x51\x83\xe9\x9a\x35\x5a\x2f\x37\x57\xda\xf5\xd7\xe8\xd5\xab\x10\x64\x25\xb4\x19\x5b\x87\xcc\x12\xfe\xd0\x86\x4f\x5f\xf5\x5c\xb5\x1a\xc9\x1f\x13\x71\x5f\xba\x91\xc1\x9c\x0c\x5b\x21\x19\xb8\x12\x0c\xd2\xa2\x60\x54\x3b\xae\xd1\x05\x16\x25\x20\x39\x4d\x05\x27\xa0\xa0\x58\x5f\x78\xa8\xd9\xf2\xa1\x59\x53\x1d\x26\x09\x10\x3d\xc6\xe2\xed\x32\xd5\xba\x90\x71\x44\xed\x90\xdf\x5a\x94\xda\xed\xfa\x24\x05\xe2\xcc\x2f\x5f\x4c\x2b\x12\x17\xd0\xce\x75\x5e\x9a\xc0\x37\x95\xa7\xe0\xb4\xdb\xd5\xa8\x78\x40\xa9\xa8\x56\x38\x5a\xa2\x3f\x4e\x74\x4e\x3d\x9f\x3b\x68\xc4\xbd\x6e\xba\x06\x5c\xd7\xb6\xf5\x43\x2a\xeb\xa3\xcb\x10\xfc\x36\xbe\x82\x12\x66\xcb\xe5\x62\xf5\xf7\xaf\x6f\xaf\xdf\xcc\x56\xf0\x73\x3c\x7e\xf7\x84\x00\xcf\xfd\x5b\x63\x51\x4f\x80\x43\xec\xd3\x60\xa3\x11\x9e\xde\x30\x33\x29\xa9\x33\x0c\x17\xa2\x16\x46\xe2\xe0\x91\x3e\xde\x87\xbf\xf2\xd2\x11\x3d\xc9\x75\x64\x73\xb0\x7e\xf6\xc9\x7e\xd9\x3d\x74\xd8\xfb\x4b\x2c\xa4\x89\x22\xc7\x57\xd3\x3e\xb5\xe0\x85\x63\x9c\x3f\xeb\x26\x48\xfe\xf2\x4f\x49\x9b\xed\x08\x96\x4a\xfb\x49\xbe\xee\x0e\x99\x35\x81\x64\xd8\xbc\x69\xd8\x0a\x6b\x05\x3a\x6e\xdf\x9e\xe4\xe0\xde\x28\xdc\xa7\xbd\xc1\x79\xbc\x5d\xb0\xf8\xa1\xd3\xd6\xeb\x4a\x41\x37\x6d\x3a\x04\xd4\x5c\xa1\xf5\x6f\xf2\x4e\x58\x05\x64\x61\x2d\xe4\x8d\xff\x76\xb0\xb1\xd4\x80\x18\x5e\x45\x6f\x5e\x54\x80\x35\x36\x68\xd8\x0d\x5e\x4c\xde\x1d\x6f\x34\x7a\x28\x0d\xb6\xd1\xd6\x71\x2a\x4b\x41\x8f\xfb\x3d\x74\x0e\x41\xb3\xe7\xe4\x50\x58\x59\xa5\xc9\xa9\x6d\xc9\x69\x46\x50\xda\xc6\x0d\x30\xa8\xcf\xc2\xf2\x7c\xe2\xd1\xa3\x6d\x6b\xf1\xff\x5d\x93\x12\xc3\xd3\x36\xea\x09\x6c\x6d\x94\x96\x82\xd1\xc1\x5d\x85\x41\x35\xff\x0f\xfd\x8a\x11\x60\xf0\x9e\xc3\x63\x1e\x56\xb8\x70\x57\x78\xcf\x5e\x99\x12\x2e\x88\x6a\x14\xe6\xe3\xa0\x5a\x8b\xb7\x9a\x3a\x37\x85\x7b\xd7\xc7\x27\x90\x8f\x59\x86\xa6\x6b\xf6\xbd\x30\xdc\xc3\xad\xa8\x3b\x84\x3b\xcd\x71\x33\x0e\x56\x04\x61\x54\xef\x63\xef\x6f\xf8\xf1\xc5\xcb\x57\xc5\xeb\xd3\xb3\xf3\x5d\x9f\x07\x48\x88\x7f\xdf\x84\x94\xd7\xc5\xe9\xd9\xf9\x4f\x3e\xe7\xb0\x01\x75\x3c\xe9\x41\x76\xa7\x45\x11\x01\x4e\xcf\xce\x13\xfc\xe5\xd5\x6a\xf1\xdb\xe2\x7a\x17\xde\xa3\x7f\x14\x75\x43\xb1\xd9\x14\xbf\xd8\x6d\xf0\xcb\x62\x7e\xf9\x66\xf6\xfb\x01\xff\xec\xf1\xbf\x00\x00\x00\xff\xff\x0e\x6d\x87\x30\xfd\x0a\x00\x00")

func tokenmetaGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_tokenmetaGraphql,
		"tokenmeta.graphql",
	)
}

func tokenmetaGraphql() (*asset, error) {
	bytes, err := tokenmetaGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokenmeta.graphql", size: 2813, mode: os.FileMode(0644), modTime: time.Unix(1583767808, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0x72, 0xfe, 0x81, 0xf4, 0xbe, 0x92, 0xa1, 0x48, 0x38, 0xe7, 0xf9, 0x6, 0xe5, 0x35, 0xdd, 0xbc, 0x99, 0x28, 0x75, 0xc7, 0xd4, 0x2c, 0x68, 0x45, 0xe8, 0x80, 0x3d, 0x42, 0x23, 0xba, 0x92}}
	return a, nil
}

var _transactionsGraphql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x7b\xe1\x72\x1b\x39\x8e\xff\x77\x3d\x05\x92\xf9\x10\x7b\x4a\xd1\x24\x3b\x5b\xf3\xcf\x5f\x55\x5b\x5b\xb2\xa5\x4c\x74\x63\xcb\x5e\x59\xde\x4c\x6e\x6b\x4a\xa2\xba\x21\x89\xeb\x16\xd9\x21\xd9\x96\xb5\x57\xf3\x58\xf7\x02\xf7\x64\x57\x00\xc9\x6e\xb6\x24\x27\xd9\xab\xfd\xb0\xf3\x61\x62\x75\x93\x20\x00\x82\xc0\x0f\x20\xba\xf3\xf2\xe5\xcb\xce\xcc\x88\x0c\x2d\xe8\x15\xb8\x0d\x02\x3e\x61\x56\x39\xa9\x15\x3d\x10\xb0\x96\x8f\xa8\xc0\x19\xa1\xac\xc8\xe8\x71\x0f\x66\x1b\x69\x61\x8b\x42\x59\x9a\xd0\x49\xde\xc1\x4e\xd8\x40\x00\x73\xd0\x8a\x09\x66\x1b\x21\x55\x0f\x3e\xe9\x0a\x44\x61\x35\xac\xd1\x41\xa6\x95\xc3\x27\x07\x62\xa9\x2b\xc7\x54\x96\x85\xce\x1e\x40\x2a\xd8\x6d\x64\xb6\x01\xe9\x5a\xb4\xba\x20\x54\xce\xd4\xac\x13\xae\x3a\x66\xb6\xd7\xe9\x7c\x1c\x4c\x27\x7d\xb8\x16\x0f\x08\xb6\x32\x08\x4e\x83\x28\x76\x62\x6f\x21\xdb\x60\xf6\xc0\xe3\x17\x7e\xfa\x02\xce\xa4\x67\x6e\x61\x30\x43\x59\xba\xc5\x39\x38\xdd\xd9\xd6\x93\xf7\xba\x7a\x65\x10\x94\x66\x5e\xad\xcc\xd1\x48\xb5\x06\x01\x2b\x21\x0b\xcc\x53\x85\x80\xb0\x20\x57\x81\xe3\x8e\xad\xb2\x0c\xad\x5d\x55\x45\x8f\x95\xeb\xf6\x25\xc2\xac\x19\xcd\xca\x86\xff\xea\x00\xc8\xbc\x0f\x77\x8e\xc8\xbe\xe8\x74\x00\x68\x30\xc0\x45\x5b\x0d\x8e\x54\x9d\xae\xe5\x78\xba\xce\xb2\xca\x18\xcc\xeb\x69\xac\xbd\xbe\x9f\xfd\x01\x45\x8e\x26\xa1\xc9\xfb\x25\x2d\x08\xb0\x1b\x6d\xdc\xeb\x0d\xe9\x72\xa5\x4d\x2d\x7c\x2f\x68\xa5\x57\x4f\xf1\x0f\xfa\x30\x9b\x0e\x26\x77\x83\xcb\xd9\xf8\x66\x32\xbf\x9b\x0d\x66\xf7\x77\x29\xdd\x84\xaf\xc6\x6a\x02\xcd\xb8\x8f\xd6\xdb\x80\x56\x16\x95\xad\x2c\x3c\x8a\xa2\x42\x28\x8d\x2e\xc5\x5a\x90\x95\x88\xcc\x68\xeb\x47\x29\x74\x3b\x6d\x1e\x1a\x36\x02\xad\x7e\xba\xd4\xd4\x3f\x3b\x92\x72\xb0\xd5\x95\x72\x64\x18\x0d\x2f\x4e\x6e\x91\x94\xb9\x95\xb4\x08\x66\x5a\xe5\x16\xce\xfe\xe7\xbf\xed\x39\x60\x21\x4a\x8b\x39\x2c\xf7\x5e\xc9\xbb\x8d\x2e\xf0\xd8\xce\x3b\x00\x99\x36\x06\x6d\xc9\x73\x9d\xf6\x56\x93\x8c\x9b\xf3\x96\xf4\x02\xbd\x05\xac\x24\x16\x39\x04\xf3\x1a\xdd\xdc\x8d\x6f\xc0\xea\x95\xdb\x09\x83\x3d\xe2\xd6\x9b\x69\xdc\x93\xef\xbf\x57\xda\x7d\xff\x3d\x0f\x4e\x94\x72\xa0\xaf\x70\xe6\xbc\xee\xa4\x85\x95\xd1\xdb\x84\xbe\xd2\x39\x76\x00\xdc\x46\x38\x30\x58\x16\x62\x8f\xfe\xb0\xa4\x96\x53\xcf\x89\x5a\x86\x7b\xdb\xd8\x7f\x2f\x2b\xab\x7b\x2b\xd6\x78\x4d\xaa\xba\xf3\xaa\x5a\x90\x18\x7b\x5d\x99\x0e\xc0\xcf\x46\x94\x9b\xbf\x5c\x81\x2e\xd1\x08\x26\x28\x95\x75\x28\x72\xd2\x89\x41\x67\x24\x3e\xe2\xa9\xbd\x6e\x76\x33\xa8\xa8\x0f\x63\xe5\x7e\xfa\xe3\xc9\xad\x0b\xbc\xc1\x52\xa8\x7c\x27\x73\xb7\x61\x6a\xd5\x16\x73\x38\x23\x8b\x65\x0f\x40\x87\x34\x9c\x7f\x23\x1c\x42\x21\xb7\xd2\xd1\xe9\x44\xb5\x96\x0a\xcf\x9f\xdf\xd3\x2e\x48\x45\xa7\x65\xef\xd0\x06\x9d\x7e\xdb\xee\x2a\x74\xf3\x8a\xd4\xf3\xc5\xfd\x85\xb3\xda\xe8\x2b\x5b\x89\xa2\xd8\x93\xd4\x9f\x2b\xf9\x28\x0a\x54\x8e\xe8\xd7\xfa\xae\x29\xce\x77\xda\xe4\x16\xbe\x87\x77\x8b\xf3\x7f\x33\x03\xf9\xb8\x91\x05\xef\xa9\x61\xa2\x8a\x36\x5a\x58\x3a\x57\x9a\x3d\xe3\x56\x38\xf6\x51\xc8\xa7\xa4\xc5\x50\x97\xfc\xa1\x75\xb2\x28\x20\xd3\x55\x91\xc3\x12\x21\x97\xab\x15\x1a\x54\xae\x07\x6d\xdb\x53\xe8\xd8\xf6\x3e\x92\x26\xfe\x25\x46\x07\x67\xdb\xaa\x70\xb2\x2c\x90\xf8\x58\xee\xe1\x1d\xcd\xa0\xc8\x43\x83\x45\xb4\xb7\x68\x0b\xe7\x8d\x91\x46\x5e\xfa\x70\x2f\x0f\xcc\xf4\xe3\x06\x49\x17\xc7\x4e\x99\x22\x95\x36\x72\x2d\x15\xed\x39\xf9\xd9\x6c\x83\x79\x75\x10\x27\x12\xef\x1a\x5f\xf7\xe1\x42\xeb\x02\x85\xe2\x55\xbe\x83\x41\x9e\xc3\x4b\xb9\x2d\x0b\x99\x49\xf7\x12\x76\x1b\x64\x33\xdb\x53\x28\x8a\x8f\xe1\xac\x90\x74\x00\x14\x1a\xa3\x0d\xc7\x45\xad\xd8\xff\x9f\x37\x44\x8c\xd8\xea\xd2\xfa\x0d\x27\xc3\x3c\xb2\x68\x28\xf0\x11\x8b\x3e\x4f\xf8\x1e\x44\x51\x78\xcb\x1f\x8e\xde\x8f\xa6\xd3\xd1\x70\x3e\x9b\xfe\xba\x20\x2a\x8d\xea\x6d\xaf\xd1\xc4\x95\xb4\xce\xf2\xac\x34\x2c\xd9\x2e\xac\x0a\xe1\x1c\x2a\x72\xeb\xc4\x97\xc9\xd1\x78\x1f\xdb\xf6\xc9\x89\x4f\x08\x01\x7e\xc0\x74\x6c\x1f\xfe\x36\x68\xc2\xe4\x8b\xdf\x12\xed\x4f\xd1\x55\x46\x51\x14\x6b\x16\x29\xa4\x65\xb7\x71\xc0\x85\x54\x30\xaf\x17\x9c\x7b\x36\xba\x34\x4e\xab\x62\xcf\x82\xb2\xe5\x92\xcb\x48\x14\x63\xe1\x8c\x8f\x80\x00\x8b\xc2\x64\x9b\x2e\x68\x03\x9a\x77\x7c\x25\x0b\xc7\x00\x20\x31\x94\x48\xe2\x8b\x9c\x37\xd0\x2a\xae\x21\x1c\xe4\x58\xba\xcd\x9f\xde\x74\xc1\x6d\xb4\x45\x28\x85\x71\xd1\x9f\x45\x2b\x4a\x03\x5e\x0f\xc6\x0a\x16\x74\x84\xb5\x5d\xc0\x23\x1a\x4b\xb2\xbe\xed\xfd\xbf\xde\x1b\xd6\xf2\x12\x0b\xbd\xeb\x7a\xab\x3c\xe5\xcd\xd2\x6d\xb7\xc1\x7f\xf5\x48\x02\xa7\xcb\x2b\xb2\x82\x93\x12\xfc\x16\x4c\xf2\xfd\xf8\xd7\xeb\x51\x9f\xad\x0f\xb7\xec\xc4\x36\xd2\x7a\xbb\xf1\x50\x68\x38\x33\x4f\x3c\xa3\x7f\x04\x73\x5a\x14\xf0\x11\x95\xab\xfc\x01\xc9\x73\x58\xb0\xf9\xce\x33\x9d\xe3\xa2\x1b\xc0\xc2\x12\x33\xbd\x45\x0b\x4a\x38\xf9\xc8\x81\xfb\x6d\xef\x5d\xef\x4d\x87\xed\x24\xc3\xd2\xfd\xc7\xdd\xcd\xa4\x0f\xf4\xff\xce\xef\x1d\xfa\xcf\x66\xa2\x10\xc6\x3f\x09\x7f\xfb\x63\x1b\x7f\x8d\xd3\x1f\xf4\xea\xc7\x3f\x74\x08\x97\xcd\x18\x19\x90\x35\x19\x2c\x0d\x5a\x54\x4e\x44\xd0\x1b\x51\x03\x69\x6f\xfa\xfe\xf2\xc7\x1f\x7f\xfc\xff\x04\x97\xb6\xc2\x75\x41\x97\x34\x8a\xa5\x90\x2a\x2b\xaa\x9c\x8c\x68\x2b\x8b\x42\x06\x78\xd1\x23\xeb\x08\xeb\xd1\x22\x9d\x23\x04\xd8\x02\x30\x8c\x04\xbf\x84\xb6\x00\x4e\x45\xe6\x7e\x90\xe5\x45\xe2\xb1\xd8\x7b\x36\x2f\x48\x41\xc4\x4b\xb2\xa7\xb0\xd1\x45\x6e\xa3\xe3\x0f\x86\x79\x80\xf7\xad\x54\xeb\x02\xe3\x89\xda\x49\xb7\x91\x0a\x44\xdb\x8f\xd5\xb8\x76\x70\x00\x69\x5f\xbe\x7c\xf9\x73\xa1\x97\xa2\x00\x8b\x9f\x2b\x54\x19\xc2\x78\x08\x3e\x70\x93\xb2\xb3\xe0\xc3\x83\xb1\x52\x62\x00\x67\x0c\x4a\x6b\x4c\x1a\x63\xc2\x9a\xe9\xcc\x23\x9d\xf3\x1e\x4c\x6e\x66\x64\x88\x2b\x3f\x99\xf7\x2e\x80\xf1\x18\xdc\x2d\x7e\x86\x1d\x85\x9c\x25\xc2\x9b\x5e\xf0\xb5\xf8\xf9\xd0\x95\xff\x27\x1a\xfd\x7a\x29\x08\xfd\x49\x95\xe3\x93\x3f\x7c\x0d\x7f\x41\xe8\x83\xf8\x78\xda\xad\xf4\x52\x37\x26\xb5\x1a\x13\xc1\x66\x13\xfc\x82\x5e\x4d\x35\x32\x0e\x28\xc1\x87\xc3\x24\x56\xa7\x78\x3a\x8c\xf5\x88\x60\x46\x48\x27\xc2\xea\x20\x9f\xaa\x8a\xc2\x07\x08\x52\x42\x65\x68\x33\x29\x2b\xe8\xc1\x5f\xd1\xc8\xd5\xbe\x95\xee\x74\x20\xc0\x96\x90\x92\x1d\xe5\x23\x7a\xf9\x77\xcc\x5c\xe2\xe1\x6b\xe4\x3d\x48\x6d\x36\x81\x6c\x59\xc6\x31\xd4\x8b\x42\xa7\xb8\x9d\xfb\x39\x4d\x68\x25\xaf\x32\xf4\xaa\x4d\xfc\x3f\x03\x2a\xa2\x74\x77\x72\xe3\xf9\xdf\x47\x34\x6d\x56\x1e\xd1\x24\xd9\x92\x7f\x37\x13\x86\x22\xfa\x16\xdd\x46\xe7\xaf\x68\xfb\x3c\x4f\x4a\x6c\xb1\x17\xd2\x9e\x5c\xa3\x05\x86\x50\x89\x6f\x8c\xae\x91\xb2\x50\x23\x32\xe7\xf9\x5f\x22\x63\xc8\x3a\xe3\xe4\xe0\xc9\x28\x52\xb8\x80\x55\x1e\xd1\x2c\x7c\xe6\x1b\xe9\x7b\xb4\x41\x2b\xda\x92\x4f\x14\x21\x97\xe8\xec\x4f\x48\x29\x32\xd7\x8b\x7c\xca\xc4\xad\xfb\xf3\xe8\x05\x0e\xef\x0f\xb3\xc3\x63\x71\x59\x9f\x5e\xda\x86\x99\x2e\x64\x7a\xbb\x94\x14\x1e\xc9\x90\x63\x0c\x60\x92\x8b\x2e\xe4\xe8\xd0\x6c\xa5\x42\x9b\xee\x5d\x29\xdc\xa6\x36\xad\x7a\x13\x5b\x39\x32\xcb\xde\xd2\xd8\x33\xe2\x11\x43\x27\x64\x0b\x27\x85\xde\x1e\x4a\x76\x27\xd7\x4a\x38\x6d\x24\x5a\x30\x84\x97\x8d\xb7\xa0\xc0\x48\x7a\x38\x4f\xac\xb9\x60\x9d\x56\x6e\xa3\x8d\xfc\x07\x3b\xf1\xc5\xf3\xcb\xb7\xc6\xf5\xe1\x6f\xb7\xa4\x0c\x4b\x11\x95\x43\x61\x83\x38\x86\xc2\x09\x28\xc5\xbe\xd0\x22\xef\xc1\xb5\x5c\x6f\x1c\xe9\x46\x80\x65\xd6\x09\x1b\x08\x8e\x3b\xe1\xec\x90\x66\x4b\x54\x1c\x0f\xc8\x87\x04\xac\x18\xea\x18\xa5\xb6\x56\x2e\x0b\x2e\x4a\x54\xaa\x14\x94\xe3\x3b\xa8\x2c\xd7\x14\x14\x0c\x2e\xc6\xcf\x09\x96\x0b\x27\xbe\x20\x0f\xbd\x0e\x11\xd1\xf3\xcd\x2c\xdd\x30\x4b\x4d\x68\x63\xa4\xb3\xa9\xbd\x7a\x29\x8c\xd8\x92\x1d\x58\xe2\x9a\xb6\x92\xb2\x01\xa3\xab\xb5\x37\x17\x62\x07\x3e\x06\x6b\x58\x90\xa7\x59\x34\x15\x0e\xf5\xca\xb5\xc4\xf1\x04\x40\xba\xd3\xe6\x40\x7b\xf6\x77\xab\x95\x67\x97\xfe\x6a\xb1\xfb\x01\x9f\x5e\xa3\xf2\x2c\x04\xcd\x1e\x71\x6d\xc4\x8e\xe5\x84\x98\x01\x7e\xd9\x14\x36\xf8\x34\xff\x8a\xd6\x36\xf8\x34\x64\xc5\xb5\xed\x70\x50\x03\xca\xe9\xe0\x1a\xb6\x55\x84\x04\x35\x04\xee\x46\xa7\xd6\xd4\x0d\x5a\x81\xb1\x03\x21\x4a\x31\x74\x18\x5c\x03\x81\x70\xad\x68\x8b\xe3\x69\xc5\x47\xb2\x0a\x86\x0e\x98\x50\x6e\xa0\x7a\x5c\xb6\xae\x71\xa5\x99\x86\x74\x16\x8b\x55\x48\x01\x32\x83\xa2\x09\xdc\x39\xae\xd0\x18\x72\x5c\xec\x4c\xb7\xfa\x51\x14\xed\x37\x3e\xd2\x4c\x07\xd7\xe7\x3d\x78\x1f\x62\x72\x37\x14\xc7\x16\x46\x6c\x6f\x4a\xbb\xf8\x6a\x84\xa8\xbd\x32\x8f\xef\xc3\xdf\xa6\x83\xeb\x9b\xb2\x39\x37\x8d\x0e\x29\x3d\x48\x04\x14\xab\x15\x66\xbc\xa7\x35\x3f\x29\xf8\xee\x42\x4b\x26\x32\xcc\x02\xfd\x5f\x5b\x9d\xcb\x95\xcc\xc2\xf3\xa3\x1d\x08\xca\x0f\xe7\xc1\x99\x27\xcf\x17\xe1\xd2\xd3\x8c\x39\x41\xa6\x7b\x62\x7b\xe1\xac\x51\xa9\xa9\x19\xf0\x4a\x9c\xf3\xac\x79\x97\x13\x5f\x01\x73\xa3\x77\xf3\xf3\xb0\x28\xbf\xf2\xab\xce\xfc\x9f\xa7\x96\x25\x9b\x24\xd4\x91\x2e\xf8\x9c\x30\x30\x56\x16\x4d\x50\x4c\x2a\xbf\x65\xc8\x1f\x59\xf3\x99\x85\xda\x07\x91\x88\x29\x3b\x8f\x6e\xdb\x66\xba\xc4\x03\x6c\xf3\xca\x26\xde\x3c\xaa\x6c\x79\x53\xda\x33\x3a\x82\x7d\x7f\x1c\x3c\xb5\x78\x38\xce\x49\x97\x17\xa9\x48\x37\x95\x2b\xab\x3a\x65\x69\x08\x97\x46\x2a\x77\x76\xbe\x60\x3c\xcb\xc9\x42\x00\x37\x09\xa0\xb2\x5b\xca\x76\x62\x18\x09\x1c\x50\xf2\xae\x8b\xa3\xb0\xd0\xca\xb7\xe3\x01\x20\xd8\x17\xaa\xc7\xaf\x57\x06\xb1\xbd\xfd\xe1\xcd\x7b\x83\xd8\xce\xad\xfd\xeb\x51\x28\xfa\x31\xc2\x5f\xa2\xdb\xa1\x4f\xb0\x61\x89\x6b\xa9\x14\xfb\xee\x13\x55\xf0\x84\x81\x2e\x18\x2c\x7c\x7a\x12\x40\x04\xd3\xa2\x3f\x8e\xaa\x4d\xa4\x07\x13\xc0\xd0\x92\xab\x37\x19\x5a\x9b\x54\x6d\x4f\x17\xc4\xc6\x2b\x50\x5a\xbd\x26\xb7\xdb\x6d\xc9\xee\xd1\x6e\x8f\xe1\xa0\x75\x14\x43\xc8\x16\x7c\x49\xc6\xd6\xd1\x7b\xa5\x2b\x95\xa7\x2a\x27\xf7\xc9\x51\x21\x44\x33\x62\xe4\x51\xe6\x98\xd7\xd8\xf5\x20\xb5\xe2\xac\x6d\xec\x27\xaf\x2a\x57\x19\xec\xc2\x0e\x43\x1d\xc7\x3a\x53\x65\xf4\x0c\x16\x7e\xe2\x22\xd8\x5b\x28\x6f\x3e\xbf\x6b\x4a\xbb\xe4\x18\x13\x8a\xf2\x0e\x9e\x50\x96\x8f\x92\xce\xc8\xf5\x9a\x2b\x06\x82\xab\xd5\x32\x47\x40\x76\x1b\xc0\x89\xb9\xf2\xd9\x78\xb4\x1e\x7f\x29\x90\xe9\x52\x86\x6a\x16\x3e\x11\x34\xb1\x84\x3f\xa2\xac\x35\xb8\xae\x33\xeb\x56\x89\xd7\xe3\xa6\x8d\x28\x4b\x24\x15\x12\x9c\xde\xeb\x0a\xb2\xba\x20\x12\xe0\xc8\x9c\x99\xdf\x2f\x02\xfa\x3a\xac\xaf\x49\x45\x86\x6b\x65\x16\x6b\x08\x75\xde\xc4\xf6\xfe\x3a\x72\x7c\xce\x79\xb7\xb4\x13\xa6\x76\x60\xa1\x51\x71\xda\xb0\x8f\x49\xf5\xc7\xb5\x86\x20\x64\xbe\xaa\x2c\x86\x12\x05\x7c\xae\xd0\xec\x3d\xcd\xeb\x50\x8f\xf8\x0b\x3d\x3a\x20\x7d\x5c\x86\x98\xb3\xa7\xc3\x7c\x7e\xe4\x79\x7c\xf9\xd1\x45\xf0\x4c\xe1\x5e\xaa\x15\x6f\xa8\xf0\xe5\xb3\xc4\x7f\xed\xd0\x20\xec\x8c\x74\x0e\x55\x3c\x10\x5c\x8b\xf2\xb9\x5d\xcc\xf4\x62\x05\xc6\x97\x5f\x9a\x0d\x0f\x4c\x1c\xf1\x30\xd3\xa0\x97\x8e\x28\x24\xe7\xd0\xd3\xb0\xc8\x96\xd7\xaa\x1a\x7d\x35\x6a\xb1\x6b\xf0\x6b\x85\x29\x67\x56\x1b\xca\x6e\x42\xb2\x7d\x33\x9d\xcd\x6f\xa6\xc3\xd1\x14\xfe\x04\xa3\x5f\x47\x97\xf7\xf4\xf8\xfc\x54\x45\xe4\x65\x20\x9c\x3a\x3f\x2f\x53\x14\xc6\x4b\xac\xb0\xeb\x95\xa5\x30\x00\xed\x46\xe5\x27\xf4\x2d\x9d\xaf\xb0\x3a\x50\x48\x5e\x42\x18\x19\x4a\x55\xa5\x30\xe8\x93\x85\x23\x5d\x2c\xab\x90\x0f\x1a\x5c\x15\x74\x4a\xfc\x42\x6d\x1f\x0b\xb9\xf4\x86\x93\xc2\x05\x94\xe1\x8c\xe2\xc1\xb1\x0c\x02\x69\x13\x5d\xe9\x9c\x9c\xec\x3c\x3a\xd9\xa8\x47\x6d\xbc\x62\xfa\x69\x09\xa0\xf1\xb3\xf7\x36\x80\x76\x2e\xd3\x2e\x2b\x59\xe4\x07\x5e\xd5\x19\xc4\x6e\x00\xc0\x7c\xd0\x22\x4e\xcb\xa5\x2d\xb9\xac\x2c\x8a\xb5\x36\xd2\x6d\xb6\x7c\x2f\x90\x30\x69\xbb\x4d\x31\x8d\xcf\xff\x51\x30\xb0\x21\x6b\xf6\x65\x02\x2b\xb7\xb2\x10\x86\x78\xe1\x54\x8e\x0e\xf8\x8e\x7d\xd9\x46\x3c\x22\xac\x35\x1b\x6f\x8a\x15\x4b\x23\x35\x8f\x6f\x8a\x6d\xef\x7a\x6f\x1a\xec\x93\x15\xda\xa2\x75\xf7\xca\xb3\x85\xf9\x40\x65\x68\x9f\x51\xca\xef\x9d\x0e\xaa\x6a\x7b\xc2\xd4\x42\xc5\x64\x54\x2b\x85\x6c\xd2\xef\x6d\xb8\x5e\x65\x56\x85\xbf\x39\x60\x66\x59\x89\xbe\x10\x47\x80\x59\x1b\xce\x54\x83\xa3\xf7\x33\x29\xc7\x0d\x40\x8b\x1e\x16\x52\xa1\x30\x09\xda\x59\xd5\xd7\xa8\x18\x82\x62\xb4\xf7\xb0\x7f\x97\xd1\x4e\xbe\xc0\x4e\x6d\xfa\x36\x30\xd1\xe6\xc1\x6d\x70\xef\x7d\x43\x53\x09\x5f\xb6\xcc\xb9\x89\xa6\x35\xb7\xec\x7d\x17\x16\x55\xbe\xe8\xfa\x7f\xe7\xa9\x0d\x2e\x78\xb7\x17\xde\x11\xcf\x0d\x66\xb2\x94\xa8\xdc\xc2\xaf\x43\x1e\x9b\x62\xe3\xd8\xc1\x96\x73\x35\xef\xd3\x1b\x59\x39\x3f\x40\x41\x86\xd5\x14\xed\x59\x2b\x9e\x79\xd1\x5c\x4f\xb4\x2a\x3b\x97\xd3\xd1\x80\x95\xf3\x3b\x97\xd3\xa6\x31\x39\x61\x1c\xb2\x11\x6a\xcd\xb9\xae\xbf\xa5\x2a\xa3\x86\x09\xfa\x73\xfe\x13\xae\xcf\x43\xfa\x5d\xd7\xcd\x18\x33\xc7\xfd\xff\x48\x46\xe9\xd9\xf5\x58\xe1\xef\x95\x75\xbe\x82\xe3\x8b\x64\x61\x8d\xe9\xe0\x3a\xf0\x54\x3b\xe0\x3e\x3d\x9c\xdf\xdc\x8e\xa6\xcc\x63\x5d\x29\xe0\xed\xf1\x45\x06\x5f\xd5\xc8\x71\x29\xf9\x4a\xde\xd0\xf9\xcd\xf9\xef\xe9\xe0\xda\x93\x2b\xc5\xbe\x55\x5d\x61\x1a\x93\x6a\xbb\xa4\x60\xb4\xf2\x37\x24\xde\xc5\xb1\xaa\x83\xef\x68\x2e\xe6\x4a\x6d\x25\x21\xa2\x73\x9f\x79\x14\xc8\xa5\xb5\x33\x85\x6b\x06\x4a\xe7\x01\x66\x62\x41\x19\x57\x0b\xea\x1c\x2e\xa2\xf4\x0e\x2a\xdb\x18\xcb\x82\x59\x5b\x44\x61\xba\x20\x56\x0e\x0d\x88\xb2\x2c\xf6\xde\xc0\xa5\x0d\x79\x56\xd0\x88\x3f\xf9\xe1\xb4\x08\x28\xc9\x4e\x2c\xc2\xa3\xc4\x5d\x34\x7d\x1a\x5f\xe0\xca\xd5\x89\x99\x57\x94\x27\x7d\xf2\x6e\x87\xd6\x93\x74\xd0\xd6\xba\xce\x93\x9b\xcb\x0f\x7b\xc2\x37\xc3\xd9\xe2\x30\x16\xf5\x0e\x83\xd6\x39\x1b\x74\x65\xfd\xa9\x2e\x84\x75\xc1\x2e\x62\x9a\xdb\xb2\x9d\xc6\xfb\x54\xed\xeb\xa9\xe8\x5f\x5a\x96\xe0\x6d\xab\x9d\x20\x32\xaa\xaf\x4d\x7a\x34\x9f\x0d\x2e\xae\x46\xbc\x11\xe4\xba\x9e\x4b\xcc\x68\x42\x7a\x2b\x34\x1f\x0c\x87\x3c\x29\x13\x2a\xc3\xe2\x9b\xa7\x5d\x0e\x26\x97\xa3\xab\x4e\xc3\xd6\xb7\x4e\xbc\xbd\xbf\xfb\x30\xf2\x4b\x06\x25\x3f\x33\xb3\x57\xe7\xde\xc2\xd5\x41\x38\x36\x20\x30\xf4\xa0\xdf\xb1\xaa\x67\x90\x8b\xf8\x9c\x24\xd5\x05\xc1\x56\xb9\x97\x76\xc7\x03\xb1\x3a\xc9\xe0\x26\x96\x4c\x28\x90\x6b\xa5\x8d\xdf\x38\x5f\x01\xac\xa1\xd5\x5c\xe6\x4f\xde\x95\xe9\x92\xd6\x89\x9c\xce\x9d\x79\x9a\x73\x5a\x8e\xfe\xf6\xa5\x25\xe4\x74\x74\x7d\xf3\xd7\x20\xa5\x4f\xee\xd4\x3a\xd6\xaa\xdc\xde\x0f\xbf\x1a\xcd\x46\x83\xfb\xd9\x07\x1e\x54\x48\xf5\x70\x34\xe6\x6a\x3c\xf9\xa5\x1e\x51\x6b\x59\xe1\xae\x76\x40\x1d\x80\xc9\xe8\xe3\xe0\xf2\xf2\xe6\x7e\x32\x6b\xed\xbd\xd1\x3b\x38\x2b\x8d\xdc\x0a\xb3\x3f\xa7\x71\xb7\xd3\xf1\xf5\x60\xfa\x69\x3e\x9e\x0c\x47\xcd\xae\xb3\x04\xdf\x30\xde\x0b\xc4\x53\xaa\x32\xf7\x8c\x7c\x65\xca\xfd\xed\x70\x30\x6b\x1b\x24\x1f\xff\xaf\xcf\x21\xee\xe6\x93\xd1\xc7\xf9\xed\xe0\xd3\x68\xda\xe6\xf3\x5b\x49\x78\x86\xe7\x37\x57\xc3\x53\x54\x92\xd3\x13\x06\x1e\x9f\x1e\x16\xcf\xdf\x02\xc5\x95\xee\x46\x97\x37\x93\xe1\xd7\xb4\xf8\xe5\x39\x89\x26\x0f\xd4\xf2\xe5\x79\xdf\xac\x9a\x6f\x22\x73\x52\x3d\xf5\xce\x0e\x2e\xc6\xa1\xde\x57\x9b\xd9\xdd\x68\x36\xb8\x18\xb7\x87\xd5\x90\xf4\x78\xec\xe5\xcd\x30\x58\x8b\x3a\x69\xda\xf7\x93\xe7\x8d\xbb\xac\x6b\xb8\x3c\x92\x19\xa6\x91\x73\xef\xe8\xda\x3c\x3c\x3b\x38\x98\x9f\x0f\xf3\x83\x24\xee\x9e\x2c\x57\x45\xbc\xc3\x79\xce\x2b\x0b\x5b\xdc\x6a\xb3\xef\xd5\x11\xde\x57\x9f\x62\x88\xe7\x8c\x5d\x57\x86\x12\x07\x03\x99\x20\xa7\xaf\x57\x35\x22\xff\x21\xad\xf0\xfc\xd0\xae\x3b\x9d\xf4\x91\x87\x28\x60\x48\x3e\xa4\x0d\x03\x08\x3f\x35\x51\xbd\x7e\x30\x1e\xd6\x8f\xfe\x19\xac\xe0\x34\x90\xf1\x05\x54\xff\x3c\x4f\x2d\x28\x91\xac\x10\x8a\x24\xe9\x5c\x2e\x8b\x57\xcb\x42\x5a\xca\x6c\x85\x0b\x04\xe2\x93\x81\xeb\x87\xfb\xd3\x36\x11\x11\xb3\x1c\xdf\x29\x77\xeb\x0b\x68\x26\xd4\x3f\xb8\xe2\x02\xc2\x39\x24\x30\x46\x08\xe1\xe0\x16\xe1\x88\xe3\x1c\x0b\xb1\xbf\x57\x4e\x16\xff\x97\xf5\xf0\x51\x66\xee\x18\x34\x70\x0d\xc0\x9b\x44\x28\x9c\xaf\x84\x2c\x92\x5b\xb0\xba\xf4\x52\x4a\xbf\x87\xa7\xc4\x4d\x08\x8e\x87\x11\xbd\xa4\xcd\x49\x8b\x50\x7e\x34\x4f\x27\xb7\xf5\xd4\x36\xd5\x85\x11\x5f\x49\x8e\x05\xcc\x66\x40\xeb\x16\xbf\x06\x17\x6d\x03\xf3\x66\xfd\xec\x12\x07\x99\x7d\x59\x59\x6e\xb5\x90\x94\x8a\x1a\xcc\x1c\x25\xb6\x47\xa5\x82\x88\xab\x7e\x78\x7c\xfb\x03\x3f\xf9\x81\xe6\xcd\x5b\x11\x99\xef\xb3\x04\x57\xc7\xfe\x81\x46\xc3\x82\x37\x6f\x6e\x31\x4b\xdb\x1a\x08\x30\xa4\x47\xff\x9b\xf8\x2c\x8d\x5e\x1b\xb1\xdd\x0a\x27\x33\x06\x06\xcb\x7d\xac\xde\x24\xd5\xca\x1a\x3c\x7d\x9d\xb0\x3f\xd2\xdf\x4a\xb9\x4e\x56\xd9\xa7\x30\xb2\x2a\x44\xbc\xab\x71\x5d\x58\xe9\xa2\xd0\x3b\xaf\x4f\x01\xd7\x37\xc3\xf1\xfb\x4f\x41\x46\xe6\x2a\x3e\x69\x40\xd6\xbf\x92\xb9\x31\x23\xa6\x52\xf0\xbd\x5c\x7d\xa9\xd8\x5a\xd3\xe3\xaa\x58\x48\xa3\x0c\x06\x96\xb8\xd2\x06\x5b\xec\x3d\xa3\x3b\xde\x08\x16\x3a\x4a\x48\x6e\x3d\x65\x9a\x98\x8b\x19\x6d\xe8\x0e\x59\xa0\xb6\x52\xf7\xfd\x3c\x36\x84\x05\x24\x65\x8a\xa0\x0a\xef\xce\x2f\x9f\x2d\xeb\xfb\xb0\x5e\xf7\xe9\xfa\xea\x3d\xdb\x77\xe2\x5e\x39\xd6\xa7\xfe\x15\x62\x89\x3c\x4c\xf8\x05\xf7\xf4\xf0\x3b\x7e\x7a\x2b\xdc\xa6\xc9\xa6\xe2\x09\x3a\xa0\x51\x47\x06\x2e\xdc\x07\x2b\xf4\x87\x71\x3c\xb9\xeb\xa4\x2f\x99\xe1\xf8\x72\x3a\xba\x3e\xce\x44\xb9\xa3\x29\x49\xf0\x05\xe1\x8a\xae\xcf\x6a\xeb\x98\xcb\xbc\x25\x01\xea\xe2\x58\xce\xe1\xc5\x71\x2e\x79\x6b\xf0\x51\xea\x8a\xb6\x9f\x53\xae\x98\x8e\x34\xf5\x15\xee\x44\x88\xe1\x50\xf8\xc8\x26\xb8\x53\xcf\xdf\x60\xc4\xa4\xb5\xc8\x6f\x5b\xd1\xc1\x67\x80\x14\xbf\xff\x29\xca\xf5\x06\xc6\x0b\x65\xdc\x9d\xa0\x7b\xeb\xf1\x1e\x3c\xe0\xbe\xee\x15\xd5\xbb\x48\xac\xd1\x05\xd0\x88\x3e\x6b\x23\x6e\x22\x3d\x69\xef\x61\xa8\x8b\x68\xe5\x58\xdd\x67\x1b\x7c\xe2\xdb\x9c\xf3\x94\xb4\x37\x77\x10\xb4\x45\x64\x67\xf7\xb7\xc3\x24\x2d\xad\x75\x90\xde\x3b\xd2\x62\x91\xd6\x37\xad\x11\xd2\x5f\x45\x36\xf2\xdc\x1a\x0a\x77\xcf\xae\x11\xae\xb6\xc3\x95\x6f\xac\x6e\xe9\x55\x64\xac\xe6\xd2\xdf\x06\x84\x81\xfe\x36\xf9\x05\x00\xd1\x8a\xf7\xc5\xbe\xb2\xfa\x2c\xc1\xc0\x45\xcd\xd2\x37\x13\x6c\x42\xce\xc5\xc1\x69\x21\x99\xe1\xbb\xc6\xae\x3c\x7c\xa3\x47\x0c\xee\xd0\x9f\x0e\xfa\x1d\x6f\x3f\x7f\xa8\x6d\x85\xa8\xd6\x66\xff\x0b\xee\x99\x20\x5f\x79\xc5\x4d\xa6\x79\x4a\x6c\xb1\xbe\x8d\xf6\xdf\x0e\x34\x47\xfd\xab\xe3\x38\x95\x3c\xe3\xc7\x52\xad\xfb\x70\x3f\x9e\xcc\x7e\xfa\xe3\x7c\x34\xb9\xbc\x19\x8e\x27\x3f\xc3\x9f\x60\x32\xb8\x1e\x9d\xb7\x28\xe5\xb8\x12\x55\xe1\xb8\x50\xda\x50\xf5\x56\xfc\x80\xfb\x7f\x8a\xda\x97\xe9\x45\x05\x34\x1e\xeb\xdf\x5f\x07\xd1\x14\x0e\xa9\x10\xe3\x44\x87\xd3\xe2\xcb\xf1\xf5\xe0\xaa\x03\xf0\x61\xf4\xeb\x20\xfc\x22\xaa\x14\xa6\x74\xe5\x21\xd3\x9b\xa7\x05\x65\x19\x9f\xae\x2f\x6e\xae\xbc\x09\xf1\xf5\xbb\x0d\xe5\x21\x6f\x4b\xfe\xf5\x9c\x12\x11\x1a\x83\x4f\x47\x63\x6a\x57\x7e\xd4\xa6\xc7\x1c\xc5\x4a\xea\x68\xc8\x3f\xee\x6e\xde\xcf\xe6\xef\x07\xe3\x2b\xfe\xf5\x61\x30\x1d\x36\xbf\x86\xa3\xab\xc1\xa7\x30\x6e\xf4\xeb\xed\x78\x1a\xfe\xbe\x9f\xfc\x32\xb9\xf9\x18\x6b\x8d\xa3\xa3\x6f\x2a\xd2\x9a\x62\x52\x63\xee\x75\x3a\xb3\xb4\x86\xee\x7b\xbd\x16\x94\x40\xd5\x0d\x74\x8b\x78\xbf\xb0\x47\x07\x21\x72\xf4\x80\xfc\x0d\x05\x87\x8a\x3f\x61\xd9\xeb\x0a\x14\x62\xce\xcd\x1c\x07\x4d\x7e\xa1\x03\xcc\xc7\xad\xd8\xfd\x45\xfc\x24\x5d\x44\xd2\x86\x14\xa2\xbe\xc8\xeb\xc1\x05\x72\x67\x7c\x53\x94\xf1\xe5\x59\xe2\x64\x89\xa1\x9f\x7f\x1b\xab\x28\xc2\xa6\xad\x4a\xa1\x0c\xe6\x7c\xdf\x53\x4c\x52\x5a\x37\x2f\xdd\xc3\xf0\xd0\xba\x28\xe8\xc1\x1d\x22\xe4\x3a\xab\xb6\x75\x7f\x67\xf8\xee\xa5\x7d\xab\x27\x55\xb8\xc8\x8b\xd1\xd2\x3e\xd3\x78\x06\xf0\xf2\x83\xb0\x9b\x83\xeb\x9f\xba\x4d\x68\x50\x58\x0d\x0f\x4a\xef\x54\x10\xc5\xcd\x73\xb9\x46\xeb\x16\x3e\x25\x88\x3b\xc4\x89\x07\xbf\x38\x0c\x32\xbe\x7d\xb2\xd8\x43\xa5\xe4\xe7\x0a\x9b\x3e\x4a\xe5\x4b\xa5\x14\xd3\x93\xca\x63\x7d\x0f\x59\x68\x45\xe4\xe2\xc7\x56\x1c\x41\x39\x43\xf1\x0d\x27\x4b\x04\x83\x95\x8d\x1f\x52\x49\x0b\xeb\x4a\x18\xa1\x1c\xfa\xe4\x6e\xab\x95\x76\x5a\x05\x10\x28\x55\x66\x7c\xb3\x2f\x83\xbd\xa4\x6a\xde\x5c\xac\x94\x86\x02\x8f\xdb\x73\x39\x8c\xc9\x17\x32\x7c\xf3\xa5\xe1\x01\xb1\xe4\x8e\x9b\x07\xd2\xd4\x4a\x9b\x07\x1b\xbb\xfa\xeb\x36\x88\x2e\x88\xb4\xb6\xe6\x1b\xd2\xeb\x0f\x20\xc6\x93\x9f\xfb\xbe\x8c\xc6\xdf\xee\xbc\xf6\x34\x02\xbe\xec\xc2\xba\xdd\x65\x9a\x28\xa2\xa9\xe2\xfb\x29\xf1\x5a\x3c\x8a\x5f\xdf\x99\x2d\xc9\xdc\xac\xce\x24\xe3\x7f\x16\xd4\x5f\x2f\xc7\x3b\xa4\x1a\x86\xec\x36\x7b\x90\xee\x95\x05\xb9\x2d\xb5\x71\xe1\x3e\x46\x89\x47\xb9\x0e\x17\x0b\x0f\x51\x1f\xc5\xbe\xa9\xd3\x7a\x1e\xef\x02\x8b\xad\x26\xd4\xef\xb8\xb8\xd1\xbc\xa2\xe8\xc8\xbe\x90\x97\xb4\x9b\xf8\xc5\x84\x68\x7a\x56\x28\x85\xb2\x3d\x98\x68\xe7\x3f\x50\xdb\x71\x9e\xd0\x34\x4b\x51\x7a\x25\x6c\xfc\x62\xa2\x0b\x95\x2a\xd0\x5a\x1a\xc6\x38\x7a\xa5\xcd\x36\x0c\x11\x2a\x5e\x8b\xc2\x2d\x9a\x8d\x28\x6d\x24\x96\xeb\x78\x4e\x39\x15\xeb\x9f\xc3\x40\xe5\xec\x6e\xbc\x0d\x78\xbf\x22\xea\xbb\x7b\x32\x25\xc1\x3e\x9b\x8f\x95\x56\x19\x77\xf6\x93\x2f\x38\x16\x1b\x40\x2c\xe5\xf1\xe3\xdf\x8f\x1b\xa4\xd9\xc7\x34\xa9\xb1\x4f\x8c\x5f\x44\x48\x7c\xab\xef\xc0\x20\xef\x71\x16\x32\x48\x3a\x1c\x8d\x65\x7a\x57\xe2\x5b\x9d\xb9\xec\xfb\xf6\x27\x58\x4a\x57\xf7\x53\xf1\x94\x49\xb5\x85\xb3\xf8\x31\x89\x5e\xc1\x8f\x7f\xe0\xd6\x7e\x72\xa3\xde\x0a\xe2\x24\x72\x5e\xd1\xc7\x54\x86\x0d\xab\x21\x10\x94\xac\x1f\xd1\xac\x0a\xbd\x53\xe7\xe9\xa7\x6b\xab\x8b\x30\xae\x6e\x07\xa6\xd0\x63\x41\x40\x25\x95\x7b\xfb\x13\x91\x35\x28\x0a\xe9\xf6\xdd\xb8\xe7\x3b\x4c\x3a\xed\xa5\xfb\x73\xd3\xfb\x49\x62\x7b\x61\x4b\x83\x2b\xf9\x04\x67\xfe\xca\xe4\xdd\xeb\xb7\x3f\xb5\x24\x83\xf1\xf0\x9c\xdd\x62\xb8\x8a\xd3\x20\x73\x54\x2e\xb6\x04\x73\x17\xac\x2f\xc1\x3d\xb4\xe2\x49\xad\xc9\x65\x7d\xf7\x15\x65\xb8\xe5\x15\x5b\x5d\xcd\x5b\xf1\x34\x39\xdd\x77\xce\xef\x2e\x6f\xef\x7d\xcf\xfa\xdd\x49\xe1\xdf\x25\xb2\xc7\x1a\xcc\x1d\x66\xad\xb1\x0a\x42\x47\x7d\xa7\xdd\xd7\x73\xf8\xb5\xc2\x8b\xdf\xd8\xb6\x4e\x3e\xa5\x30\xee\x50\xd9\xf0\x6a\x14\x7f\xbc\xf8\x8d\xd1\xd2\x0e\x61\xa7\xd5\x2b\xc7\x86\xaf\x73\xb1\xaf\xad\x71\xd0\x18\xe2\x51\x37\xee\x61\x0f\xeb\x57\x9b\x4a\x7d\xe3\x40\xd2\xfa\xd8\x6a\xdb\x3c\xd1\x8d\x18\xb9\x38\xa0\x13\xd8\x71\xda\xa4\x8b\x37\x05\xcd\x16\x81\xfa\xbb\x0b\x3a\xd8\xf1\x3b\xaa\xc6\x5b\x14\xfc\x05\x8f\x5e\xc5\xdb\x64\xcb\xdf\xc7\x34\xce\x93\xd6\xb7\x7f\xee\x7c\x57\xbb\x88\xd8\x74\xbf\x44\x47\x39\x88\x2d\x31\xf3\x25\x04\x11\xd2\xfd\x05\x49\xe3\x2f\x69\x0b\x82\x18\xa8\xcb\x02\x93\x66\x57\x6e\xdc\xc7\x3d\x03\x8c\x3f\x07\x2d\x27\x4e\xf0\x94\xae\x7d\xfb\xfe\x33\x0e\xa3\x95\x4b\x04\x00\xe6\xfd\x5a\xad\x58\x00\xfe\xc8\xa4\x26\xf7\x7b\xe7\x7f\x03\x00\x00\xff\xff\x36\x63\x82\x58\xf0\x3c\x00\x00")

func transactionsGraphqlBytes() ([]byte, error) {
	return bindataRead(
		_transactionsGraphql,
		"transactions.graphql",
	)
}

func transactionsGraphql() (*asset, error) {
	bytes, err := transactionsGraphqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions.graphql", size: 15600, mode: os.FileMode(0644), modTime: time.Unix(1584037750, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x58, 0xce, 0xe3, 0x57, 0x74, 0x95, 0xa4, 0xe5, 0x78, 0x6, 0x27, 0xaa, 0x51, 0xfa, 0xfe, 0x8f, 0xba, 0xbe, 0x95, 0xca, 0xb2, 0x75, 0x74, 0xd3, 0xf1, 0xfb, 0x73, 0x13, 0x9, 0x5d, 0xef}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"block.graphql": blockGraphql,

	"blockmeta.graphql": blockmetaGraphql,

	"query.graphql": queryGraphql,

	"query_alpha.graphql": query_alphaGraphql,

	"schema.graphql": schemaGraphql,

	"search_transaction.graphql": search_transactionGraphql,

	"subscription.graphql": subscriptionGraphql,

	"tokenmeta.graphql": tokenmetaGraphql,

	"transactions.graphql": transactionsGraphql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"block.graphql":              &bintree{blockGraphql, map[string]*bintree{}},
	"blockmeta.graphql":          &bintree{blockmetaGraphql, map[string]*bintree{}},
	"query.graphql":              &bintree{queryGraphql, map[string]*bintree{}},
	"query_alpha.graphql":        &bintree{query_alphaGraphql, map[string]*bintree{}},
	"schema.graphql":             &bintree{schemaGraphql, map[string]*bintree{}},
	"search_transaction.graphql": &bintree{search_transactionGraphql, map[string]*bintree{}},
	"subscription.graphql":       &bintree{subscriptionGraphql, map[string]*bintree{}},
	"tokenmeta.graphql":          &bintree{tokenmetaGraphql, map[string]*bintree{}},
	"transactions.graphql":       &bintree{transactionsGraphql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
